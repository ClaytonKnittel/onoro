Flat profile:

Each sample counts as 0.01 seconds.
  %   cumulative   self              self     total           
 time   seconds   seconds    calls  ms/call  ms/call  name    
 62.63     47.23    47.23    67548     0.70     1.11  std::pair<int, onoro::P2Move> findMove<16u, onoro::P2Move>(onoro::Game<16u> const&, TranspositionTable&, int, int, int)
 17.57     60.48    13.25 194770127     0.00     0.00  onoro::Game<16u>::checkWin(std::pair<int, int>) const
  5.01     64.26     3.78 193920540     0.00     0.00  onoro::Game<16u>::Game(onoro::Game<16u> const&, onoro::P2Move)
  1.82     65.63     1.37  9747016     0.00     0.00  onoro::GameHash<16u>::calcHash(onoro::Game<16u> const&)
  1.76     66.96     1.33 468060075     0.00     0.00  onoro::HexPos::apply_d6_c(util::math::group::Dihedral<6u>) const
  1.70     68.24     1.28  9747016     0.00     0.00  bool onoro::Game<16u>::forEachPawn<onoro::GameHash<16u>::calcHash(onoro::Game<16u> const&)::{lambda(std::pair<int, int>)#1}>(onoro::GameHash<16u>::calcHash(onoro::Game<16u> const&)::{lambda(std::pair<int, int>)#1}) const
  1.43     69.32     1.08  6370260     0.00     0.00  bool onoro::Game<16u>::forEachPawn<onoro::GameEq<16u>::compareViews<onoro::SymmetryClassOp<(onoro::SymmetryClass)6> >(onoro::GameView<16u> const&, onoro::GameView<16u> const&, onoro::Game<16u>::BoardSymmetryState, onoro::Game<16u>::BoardSymmetryState)::{lambda(std::pair<int, int>)#1}>(onoro::GameEq<16u>::compareViews<onoro::SymmetryClassOp<(onoro::SymmetryClass)6> >(onoro::GameView<16u> const&, onoro::GameView<16u> const&, onoro::Game<16u>::BoardSymmetryState, onoro::Game<16u>::BoardSymmetryState)::{lambda(std::pair<int, int>)#1}) const
  1.27     70.28     0.96 47027828     0.00     0.00  onoro::Game<16u>::calcSymmetryState() const
  1.22     71.20     0.92 194770127     0.00     0.00  onoro::Game<16u>::copyAndShift(unsigned long*, unsigned long const*, unsigned long, int)
  1.03     71.98     0.78  6370260     0.00     0.00  absl::container_internal::raw_hash_set<absl::container_internal::FlatHashMapPolicy<onoro::GameView<16u>, int>, onoro::GameHash<16u>, onoro::GameEq<16u>, std::allocator<std::pair<onoro::GameView<16u> const, int> > >::const_iterator TranspositionTable::tryFindSymmetries<onoro::SymmetryClassOp<(onoro::SymmetryClass)6> >(onoro::GameView<16u>, onoro::Game<16u>::BoardSymmetryState)
  1.02     72.75     0.77 13766898     0.00     0.00  onoro::GameEq<16u>::operator()(onoro::GameView<16u> const&, onoro::GameView<16u> const&) const
  0.66     73.25     0.50  5602984     0.00     0.00  std::pair<absl::container_internal::raw_hash_set<absl::container_internal::FlatHashMapPolicy<onoro::GameView<16u>, int>, onoro::GameHash<16u>, onoro::GameEq<16u>, std::allocator<std::pair<onoro::GameView<16u> const, int> > >::iterator, bool> absl::container_internal::raw_hash_set<absl::container_internal::FlatHashMapPolicy<onoro::GameView<16u>, int>, onoro::GameHash<16u>, onoro::GameEq<16u>, std::allocator<std::pair<onoro::GameView<16u> const, int> > >::EmplaceDecomposable::operator()<onoro::GameView<16u>, std::piecewise_construct_t const&, std::tuple<onoro::GameView<16u>&&>, std::tuple<int&&> >(onoro::GameView<16u> const&, std::piecewise_construct_t const&, std::tuple<onoro::GameView<16u>&&>&&, std::tuple<int&&>&&) const
  0.44     73.58     0.33                             _init
  0.32     73.82     0.24  1575003     0.00     0.00  absl::container_internal::raw_hash_set<absl::container_internal::FlatHashMapPolicy<onoro::GameView<16u>, int>, onoro::GameHash<16u>, onoro::GameEq<16u>, std::allocator<std::pair<onoro::GameView<16u> const, int> > >::const_iterator TranspositionTable::tryFindSymmetries<onoro::SymmetryClassOp<(onoro::SymmetryClass)4> >(onoro::GameView<16u>, onoro::Game<16u>::BoardSymmetryState)
  0.32     74.06     0.24       23    10.43    10.43  absl::container_internal::raw_hash_set<absl::container_internal::FlatHashMapPolicy<onoro::GameView<16u>, int>, onoro::GameHash<16u>, onoro::GameEq<16u>, std::allocator<std::pair<onoro::GameView<16u> const, int> > >::resize(unsigned long)
  0.28     74.27     0.21  1575003     0.00     0.00  bool onoro::Game<16u>::forEachPawn<onoro::GameEq<16u>::compareViews<onoro::SymmetryClassOp<(onoro::SymmetryClass)4> >(onoro::GameView<16u> const&, onoro::GameView<16u> const&, onoro::Game<16u>::BoardSymmetryState, onoro::Game<16u>::BoardSymmetryState)::{lambda(std::pair<int, int>)#1}>(onoro::GameEq<16u>::compareViews<onoro::SymmetryClassOp<(onoro::SymmetryClass)4> >(onoro::GameView<16u> const&, onoro::GameView<16u> const&, onoro::Game<16u>::BoardSymmetryState, onoro::Game<16u>::BoardSymmetryState)::{lambda(std::pair<int, int>)#1}) const
  0.25     74.46     0.19  1163088     0.00     0.00  bool onoro::Game<16u>::forEachPawn<onoro::GameEq<16u>::compareViews<onoro::SymmetryClassOp<(onoro::SymmetryClass)3> >(onoro::GameView<16u> const&, onoro::GameView<16u> const&, onoro::Game<16u>::BoardSymmetryState, onoro::Game<16u>::BoardSymmetryState)::{lambda(std::pair<int, int>)#1}>(onoro::GameEq<16u>::compareViews<onoro::SymmetryClassOp<(onoro::SymmetryClass)3> >(onoro::GameView<16u> const&, onoro::GameView<16u> const&, onoro::Game<16u>::BoardSymmetryState, onoro::Game<16u>::BoardSymmetryState)::{lambda(std::pair<int, int>)#1}) const
  0.23     74.63     0.17  8278836     0.00     0.00  bool onoro::GameEq<16u>::compareViews<onoro::SymmetryClassOp<(onoro::SymmetryClass)6> >(onoro::GameView<16u> const&, onoro::GameView<16u> const&, onoro::Game<16u>::BoardSymmetryState, onoro::Game<16u>::BoardSymmetryState)
  0.19     74.77     0.14  1163088     0.00     0.00  absl::container_internal::raw_hash_set<absl::container_internal::FlatHashMapPolicy<onoro::GameView<16u>, int>, onoro::GameHash<16u>, onoro::GameEq<16u>, std::allocator<std::pair<onoro::GameView<16u> const, int> > >::const_iterator TranspositionTable::tryFindSymmetries<onoro::SymmetryClassOp<(onoro::SymmetryClass)3> >(onoro::GameView<16u>, onoro::Game<16u>::BoardSymmetryState)
  0.11     74.85     0.08  9747016     0.00     0.00  TranspositionTable::find(onoro::GameView<16u> const&)
  0.11     74.93     0.08  7465620     0.00     0.00  onoro::GameEq<16u>::compareViews<onoro::SymmetryClassOp<(onoro::SymmetryClass)5> >(onoro::GameView<16u> const&, onoro::GameView<16u> const&, onoro::Game<16u>::BoardSymmetryState, onoro::Game<16u>::BoardSymmetryState)::{lambda(std::pair<int, int>)#1}::operator()(std::pair<int, int>) const
  0.11     75.01     0.08  5602984     0.00     0.00  std::pair<absl::container_internal::raw_hash_set<absl::container_internal::FlatHashMapPolicy<onoro::GameView<16u>, int>, onoro::GameHash<16u>, onoro::GameEq<16u>, std::allocator<std::pair<onoro::GameView<16u> const, int> > >::iterator, bool> absl::container_internal::raw_hash_map<absl::container_internal::FlatHashMapPolicy<onoro::GameView<16u>, int>, onoro::GameHash<16u>, onoro::GameEq<16u>, std::allocator<std::pair<onoro::GameView<16u> const, int> > >::insert_or_assign_impl<onoro::GameView<16u> const&, int const&>(onoro::GameView<16u> const&, int const&)
  0.09     75.08     0.07  1878176     0.00     0.00  bool onoro::GameEq<16u>::compareViews<onoro::SymmetryClassOp<(onoro::SymmetryClass)4> >(onoro::GameView<16u> const&, onoro::GameView<16u> const&, onoro::Game<16u>::BoardSymmetryState, onoro::Game<16u>::BoardSymmetryState)
  0.09     75.15     0.07  1375219     0.00     0.00  bool onoro::GameEq<16u>::compareViews<onoro::SymmetryClassOp<(onoro::SymmetryClass)3> >(onoro::GameView<16u> const&, onoro::GameView<16u> const&, onoro::Game<16u>::BoardSymmetryState, onoro::Game<16u>::BoardSymmetryState)
  0.07     75.20     0.05   849587     0.00     0.00  onoro::Game<16u>::Game(onoro::Game<16u> const&, onoro::P1Move)
  0.05     75.24     0.04   131705     0.00     0.00  absl::container_internal::raw_hash_set<absl::container_internal::FlatHashMapPolicy<onoro::GameView<16u>, int>, onoro::GameHash<16u>, onoro::GameEq<16u>, std::allocator<std::pair<onoro::GameView<16u> const, int> > >::const_iterator TranspositionTable::tryFindSymmetries<onoro::SymmetryClassOp<(onoro::SymmetryClass)2> >(onoro::GameView<16u>, onoro::Game<16u>::BoardSymmetryState)
  0.04     75.27     0.03    39145     0.00     0.00  absl::container_internal::raw_hash_set<absl::container_internal::FlatHashMapPolicy<onoro::GameView<16u>, int>, onoro::GameHash<16u>, onoro::GameEq<16u>, std::allocator<std::pair<onoro::GameView<16u> const, int> > >::const_iterator TranspositionTable::tryFindSymmetries<onoro::SymmetryClassOp<(onoro::SymmetryClass)0> >(onoro::GameView<16u>, onoro::Game<16u>::BoardSymmetryState)
  0.03     75.29     0.02  5602984     0.00     0.00  absl::container_internal::raw_hash_set<absl::container_internal::FlatHashMapPolicy<onoro::GameView<16u>, int>, onoro::GameHash<16u>, onoro::GameEq<16u>, std::allocator<std::pair<onoro::GameView<16u> const, int> > >::prepare_insert(unsigned long)
  0.03     75.31     0.02   542553     0.00     0.00  bool onoro::GameEq<16u>::compareViews<onoro::SymmetryClassOp<(onoro::SymmetryClass)5> >(onoro::GameView<16u> const&, onoro::GameView<16u> const&, onoro::Game<16u>::BoardSymmetryState, onoro::Game<16u>::BoardSymmetryState)
  0.03     75.33     0.02   467158     0.00     0.00  absl::container_internal::raw_hash_set<absl::container_internal::FlatHashMapPolicy<onoro::GameView<16u>, int>, onoro::GameHash<16u>, onoro::GameEq<16u>, std::allocator<std::pair<onoro::GameView<16u> const, int> > >::const_iterator TranspositionTable::tryFindSymmetries<onoro::SymmetryClassOp<(onoro::SymmetryClass)5> >(onoro::GameView<16u>, onoro::Game<16u>::BoardSymmetryState)
  0.03     75.35     0.02   467158     0.00     0.00  bool onoro::Game<16u>::forEachPawn<onoro::GameEq<16u>::compareViews<onoro::SymmetryClassOp<(onoro::SymmetryClass)5> >(onoro::GameView<16u> const&, onoro::GameView<16u> const&, onoro::Game<16u>::BoardSymmetryState, onoro::Game<16u>::BoardSymmetryState)::{lambda(std::pair<int, int>)#1}>(onoro::GameEq<16u>::compareViews<onoro::SymmetryClassOp<(onoro::SymmetryClass)5> >(onoro::GameView<16u> const&, onoro::GameView<16u> const&, onoro::Game<16u>::BoardSymmetryState, onoro::Game<16u>::BoardSymmetryState)::{lambda(std::pair<int, int>)#1}) const
  0.03     75.37     0.02    78566     0.00     0.00  std::pair<int, onoro::P1Move> findMove<16u, onoro::P1Move>(onoro::Game<16u> const&, TranspositionTable&, int, int, int)
  0.01     75.38     0.01  2104462     0.00     0.00  onoro::GameEq<16u>::compareViews<onoro::SymmetryClassOp<(onoro::SymmetryClass)2> >(onoro::GameView<16u> const&, onoro::GameView<16u> const&, onoro::Game<16u>::BoardSymmetryState, onoro::Game<16u>::BoardSymmetryState)::{lambda(std::pair<int, int>)#1}::operator()(std::pair<int, int>) const
  0.01     75.39     0.01  2087268     0.00     0.04  onoro::Game<16u>::forEachMove<findMove<16u, onoro::P1Move>(onoro::Game<16u> const&, TranspositionTable&, int, int, int)::{lambda(onoro::P1Move)#2}>(findMove<16u, onoro::P1Move>(onoro::Game<16u> const&, TranspositionTable&, int, int, int)::{lambda(onoro::P1Move)#2}) const::{lambda(std::pair<int, int>)#1}::operator()(std::pair<int, int>) const::{lambda(std::pair<int, int>)#1}::operator()(std::pair<int, int>) const
  0.01     75.40     0.01   637139     0.00     0.00  onoro::GameEq<16u>::compareViews<onoro::SymmetryClassOp<(onoro::SymmetryClass)0> >(onoro::GameView<16u> const&, onoro::GameView<16u> const&, onoro::Game<16u>::BoardSymmetryState, onoro::Game<16u>::BoardSymmetryState)::{lambda(std::pair<int, int>)#1}::operator()(std::pair<int, int>) const
  0.01     75.41     0.01    42916     0.00     0.00  bool onoro::Game<16u>::forEachPawn<onoro::GameEq<16u>::compareViews<onoro::SymmetryClassOp<(onoro::SymmetryClass)0> >(onoro::GameView<16u> const&, onoro::GameView<16u> const&, onoro::Game<16u>::BoardSymmetryState, onoro::Game<16u>::BoardSymmetryState)::{lambda(std::pair<int, int>)#1}>(onoro::GameEq<16u>::compareViews<onoro::SymmetryClassOp<(onoro::SymmetryClass)0> >(onoro::GameView<16u> const&, onoro::GameView<16u> const&, onoro::Game<16u>::BoardSymmetryState, onoro::Game<16u>::BoardSymmetryState)::{lambda(std::pair<int, int>)#1}) const
  0.00     75.41     0.00   573854     0.00     0.00  void onoro::GameView<16u>::setOp<util::math::group::Dihedral<6u> >(util::math::group::Dihedral<6u>)
  0.00     75.41     0.00   156238     0.00     0.00  bool onoro::GameEq<16u>::compareViews<onoro::SymmetryClassOp<(onoro::SymmetryClass)2> >(onoro::GameView<16u> const&, onoro::GameView<16u> const&, onoro::Game<16u>::BoardSymmetryState, onoro::Game<16u>::BoardSymmetryState)
  0.00     75.41     0.00   146113     0.00     0.00  TranspositionTable::insert(onoro::GameView<16u> const&, int)
  0.00     75.41     0.00   131705     0.00     0.00  bool onoro::Game<16u>::forEachPawn<onoro::GameEq<16u>::compareViews<onoro::SymmetryClassOp<(onoro::SymmetryClass)2> >(onoro::GameView<16u> const&, onoro::GameView<16u> const&, onoro::Game<16u>::BoardSymmetryState, onoro::Game<16u>::BoardSymmetryState)::{lambda(std::pair<int, int>)#1}>(onoro::GameEq<16u>::compareViews<onoro::SymmetryClassOp<(onoro::SymmetryClass)2> >(onoro::GameView<16u> const&, onoro::GameView<16u> const&, onoro::Game<16u>::BoardSymmetryState, onoro::Game<16u>::BoardSymmetryState)::{lambda(std::pair<int, int>)#1}) const
  0.00     75.41     0.00    52683     0.00     0.00  bool onoro::GameEq<16u>::compareViews<onoro::SymmetryClassOp<(onoro::SymmetryClass)0> >(onoro::GameView<16u> const&, onoro::GameView<16u> const&, onoro::Game<16u>::BoardSymmetryState, onoro::Game<16u>::BoardSymmetryState)
  0.00     75.41     0.00     9597     0.00     0.00  onoro::GameEq<16u>::compareViews<onoro::SymmetryClassOp<(onoro::SymmetryClass)1> >(onoro::GameView<16u> const&, onoro::GameView<16u> const&, onoro::Game<16u>::BoardSymmetryState, onoro::Game<16u>::BoardSymmetryState)::{lambda(std::pair<int, int>)#1}::operator()(std::pair<int, int>) const
  0.00     75.41     0.00     6908     0.00     0.00  void onoro::GameView<16u>::setOp<util::math::group::Dihedral<3u> >(util::math::group::Dihedral<3u>)
  0.00     75.41     0.00      692     0.00     0.00  bool onoro::GameEq<16u>::compareViews<onoro::SymmetryClassOp<(onoro::SymmetryClass)1> >(onoro::GameView<16u> const&, onoro::GameView<16u> const&, onoro::Game<16u>::BoardSymmetryState, onoro::Game<16u>::BoardSymmetryState)
  0.00     75.41     0.00      667     0.00     0.00  bool onoro::Game<16u>::forEachPawn<onoro::GameEq<16u>::compareViews<onoro::SymmetryClassOp<(onoro::SymmetryClass)1> >(onoro::GameView<16u> const&, onoro::GameView<16u> const&, onoro::Game<16u>::BoardSymmetryState, onoro::Game<16u>::BoardSymmetryState)::{lambda(std::pair<int, int>)#1}>(onoro::GameEq<16u>::compareViews<onoro::SymmetryClassOp<(onoro::SymmetryClass)1> >(onoro::GameView<16u> const&, onoro::GameView<16u> const&, onoro::Game<16u>::BoardSymmetryState, onoro::Game<16u>::BoardSymmetryState)::{lambda(std::pair<int, int>)#1}) const
  0.00     75.41     0.00      657     0.00     0.00  absl::container_internal::raw_hash_set<absl::container_internal::FlatHashMapPolicy<onoro::GameView<16u>, int>, onoro::GameHash<16u>, onoro::GameEq<16u>, std::allocator<std::pair<onoro::GameView<16u> const, int> > >::const_iterator TranspositionTable::tryFindSymmetries<onoro::SymmetryClassOp<(onoro::SymmetryClass)1> >(onoro::GameView<16u>, onoro::Game<16u>::BoardSymmetryState)
  0.00     75.41     0.00       23     0.00     0.00  absl::container_internal::raw_hash_set<absl::container_internal::FlatHashMapPolicy<onoro::GameView<16u>, int>, onoro::GameHash<16u>, onoro::GameEq<16u>, std::allocator<std::pair<onoro::GameView<16u> const, int> > >::rehash_and_grow_if_necessary()
  0.00     75.41     0.00        2     0.00     0.00  onoro::Game<16u>::Print[abi:cxx11]() const

 %         the percentage of the total running time of the
time       program used by this function.

cumulative a running sum of the number of seconds accounted
 seconds   for by this function and those listed above it.

 self      the number of seconds accounted for by this
seconds    function alone.  This is the major sort for this
           listing.

calls      the number of times this function was invoked, if
           this function is profiled, else blank.

 self      the average number of milliseconds spent in this
ms/call    function per call, if this function is profiled,
	   else blank.

 total     the average number of milliseconds spent in this
ms/call    function and its descendents per call, if this
	   function is profiled, else blank.

name       the name of the function.  This is the minor sort
           for this listing. The index shows the location of
	   the function in the gprof listing. If the index is
	   in parenthesis it shows where it would appear in
	   the gprof listing if it were to be printed.

Copyright (C) 2012-2022 Free Software Foundation, Inc.

Copying and distribution of this file, with or without modification,
are permitted in any medium without royalty provided the copyright
notice and this notice are preserved.

		     Call graph (explanation follows)


granularity: each sample hit covers 4 byte(s) for 0.01% of 75.41 seconds

index % time    self  children    called     name
                                                 <spontaneous>
[1]     99.6    0.00   75.08                 main [1]
                0.03   75.05       1/1           std::pair<int, onoro::P1Move> findMove<16u, onoro::P1Move>(onoro::Game<16u> const&, TranspositionTable&, int, int, int) <cycle 1> [33]
                0.00    0.00       1/849587      onoro::Game<16u>::Game(onoro::Game<16u> const&, onoro::P1Move) [32]
                0.00    0.00       2/2           onoro::Game<16u>::Print[abi:cxx11]() const [56]
-----------------------------------------------
[2]     99.6    0.03   75.05       1+2165833 <cycle 1 as a whole> [2]
                0.01   74.97 2087268             onoro::Game<16u>::forEachMove<findMove<16u, onoro::P1Move>(onoro::Game<16u> const&, TranspositionTable&, int, int, int)::{lambda(onoro::P1Move)#2}>(findMove<16u, onoro::P1Move>(onoro::Game<16u> const&, TranspositionTable&, int, int, int)::{lambda(onoro::P1Move)#2}) const::{lambda(std::pair<int, int>)#1}::operator()(std::pair<int, int>) const::{lambda(std::pair<int, int>)#1}::operator()(std::pair<int, int>) const <cycle 1> [3]
                0.02    0.08   78566             std::pair<int, onoro::P1Move> findMove<16u, onoro::P1Move>(onoro::Game<16u> const&, TranspositionTable&, int, int, int) <cycle 1> [33]
-----------------------------------------------
                             2087268             std::pair<int, onoro::P1Move> findMove<16u, onoro::P1Move>(onoro::Game<16u> const&, TranspositionTable&, int, int, int) <cycle 1> [33]
[3]     99.4    0.01   74.97 2087268         onoro::Game<16u>::forEachMove<findMove<16u, onoro::P1Move>(onoro::Game<16u> const&, TranspositionTable&, int, int, int)::{lambda(onoro::P1Move)#2}>(findMove<16u, onoro::P1Move>(onoro::Game<16u> const&, TranspositionTable&, int, int, int)::{lambda(onoro::P1Move)#2}) const::{lambda(std::pair<int, int>)#1}::operator()(std::pair<int, int>) const::{lambda(std::pair<int, int>)#1}::operator()(std::pair<int, int>) const <cycle 1> [3]
               47.23   27.46   67548/67548       std::pair<int, onoro::P2Move> findMove<16u, onoro::P2Move>(onoro::Game<16u> const&, TranspositionTable&, int, int, int) [4]
                0.00    0.08  238538/9747016     TranspositionTable::find(onoro::GameView<16u> const&) [8]
                0.03    0.05  238538/9747016     onoro::GameHash<16u>::calcHash(onoro::Game<16u> const&) [9]
                0.00    0.05  146113/5602984     std::pair<absl::container_internal::raw_hash_set<absl::container_internal::FlatHashMapPolicy<onoro::GameView<16u>, int>, onoro::GameHash<16u>, onoro::GameEq<16u>, std::allocator<std::pair<onoro::GameView<16u> const, int> > >::iterator, bool> absl::container_internal::raw_hash_map<absl::container_internal::FlatHashMapPolicy<onoro::GameView<16u>, int>, onoro::GameHash<16u>, onoro::GameEq<16u>, std::allocator<std::pair<onoro::GameView<16u> const, int> > >::insert_or_assign_impl<onoro::GameView<16u> const&, int const&>(onoro::GameView<16u> const&, int const&) [11]
                0.01    0.02  238538/849587      onoro::Game<16u>::Game(onoro::Game<16u> const&, onoro::P1Move) [32]
                0.00    0.03  146113/146113      TranspositionTable::insert(onoro::GameView<16u> const&, int) [36]
                               78565             std::pair<int, onoro::P1Move> findMove<16u, onoro::P1Move>(onoro::Game<16u> const&, TranspositionTable&, int, int, int) <cycle 1> [33]
-----------------------------------------------
                             5456871             std::pair<int, onoro::P2Move> findMove<16u, onoro::P2Move>(onoro::Game<16u> const&, TranspositionTable&, int, int, int) [4]
               47.23   27.46   67548/67548       onoro::Game<16u>::forEachMove<findMove<16u, onoro::P1Move>(onoro::Game<16u> const&, TranspositionTable&, int, int, int)::{lambda(onoro::P1Move)#2}>(findMove<16u, onoro::P1Move>(onoro::Game<16u> const&, TranspositionTable&, int, int, int)::{lambda(onoro::P1Move)#2}) const::{lambda(std::pair<int, int>)#1}::operator()(std::pair<int, int>) const::{lambda(std::pair<int, int>)#1}::operator()(std::pair<int, int>) const <cycle 1> [3]
[4]     99.0   47.23   27.46   67548+5456871 std::pair<int, onoro::P2Move> findMove<16u, onoro::P2Move>(onoro::Game<16u> const&, TranspositionTable&, int, int, int) [4]
                3.78   14.11 193920540/193920540     onoro::Game<16u>::Game(onoro::Game<16u> const&, onoro::P2Move) [5]
                0.08    3.36 9508478/9747016     TranspositionTable::find(onoro::GameView<16u> const&) [8]
                1.34    1.87 9508478/9747016     onoro::GameHash<16u>::calcHash(onoro::Game<16u> const&) [9]
                0.08    1.83 5456871/5602984     std::pair<absl::container_internal::raw_hash_set<absl::container_internal::FlatHashMapPolicy<onoro::GameView<16u>, int>, onoro::GameHash<16u>, onoro::GameEq<16u>, std::allocator<std::pair<onoro::GameView<16u> const, int> > >::iterator, bool> absl::container_internal::raw_hash_map<absl::container_internal::FlatHashMapPolicy<onoro::GameView<16u>, int>, onoro::GameHash<16u>, onoro::GameEq<16u>, std::allocator<std::pair<onoro::GameView<16u> const, int> > >::insert_or_assign_impl<onoro::GameView<16u> const&, int const&>(onoro::GameView<16u> const&, int const&) [11]
                0.49    0.53 5456871/5602984     std::pair<absl::container_internal::raw_hash_set<absl::container_internal::FlatHashMapPolicy<onoro::GameView<16u>, int>, onoro::GameHash<16u>, onoro::GameEq<16u>, std::allocator<std::pair<onoro::GameView<16u> const, int> > >::iterator, bool> absl::container_internal::raw_hash_set<absl::container_internal::FlatHashMapPolicy<onoro::GameView<16u>, int>, onoro::GameHash<16u>, onoro::GameEq<16u>, std::allocator<std::pair<onoro::GameView<16u> const, int> > >::EmplaceDecomposable::operator()<onoro::GameView<16u>, std::piecewise_construct_t const&, std::tuple<onoro::GameView<16u>&&>, std::tuple<int&&> >(onoro::GameView<16u> const&, std::piecewise_construct_t const&, std::tuple<onoro::GameView<16u>&&>&&, std::tuple<int&&>&&) const [16]
                             5456871             std::pair<int, onoro::P2Move> findMove<16u, onoro::P2Move>(onoro::Game<16u> const&, TranspositionTable&, int, int, int) [4]
-----------------------------------------------
                3.78   14.11 193920540/193920540     std::pair<int, onoro::P2Move> findMove<16u, onoro::P2Move>(onoro::Game<16u> const&, TranspositionTable&, int, int, int) [4]
[5]     23.7    3.78   14.11 193920540         onoro::Game<16u>::Game(onoro::Game<16u> const&, onoro::P2Move) [5]
               13.19    0.00 193920540/194770127     onoro::Game<16u>::checkWin(std::pair<int, int>) const [6]
                0.92    0.00 193920540/194770127     onoro::Game<16u>::copyAndShift(unsigned long*, unsigned long const*, unsigned long, int) [18]
-----------------------------------------------
                0.06    0.00  849587/194770127     onoro::Game<16u>::Game(onoro::Game<16u> const&, onoro::P1Move) [32]
               13.19    0.00 193920540/194770127     onoro::Game<16u>::Game(onoro::Game<16u> const&, onoro::P2Move) [5]
[6]     17.6   13.25    0.00 194770127         onoro::Game<16u>::checkWin(std::pair<int, int>) const [6]
-----------------------------------------------
                0.00    0.00     721/13766898     absl::container_internal::raw_hash_set<absl::container_internal::FlatHashMapPolicy<onoro::GameView<16u>, int>, onoro::GameHash<16u>, onoro::GameEq<16u>, std::allocator<std::pair<onoro::GameView<16u> const, int> > >::const_iterator TranspositionTable::tryFindSymmetries<onoro::SymmetryClassOp<(onoro::SymmetryClass)1> >(onoro::GameView<16u>, onoro::Game<16u>::BoardSymmetryState) [43]
                0.00    0.02   78743/13766898     absl::container_internal::raw_hash_set<absl::container_internal::FlatHashMapPolicy<onoro::GameView<16u>, int>, onoro::GameHash<16u>, onoro::GameEq<16u>, std::allocator<std::pair<onoro::GameView<16u> const, int> > >::const_iterator TranspositionTable::tryFindSymmetries<onoro::SymmetryClassOp<(onoro::SymmetryClass)0> >(onoro::GameView<16u>, onoro::Game<16u>::BoardSymmetryState) [35]
                0.01    0.03  131228/13766898     absl::container_internal::raw_hash_set<absl::container_internal::FlatHashMapPolicy<onoro::GameView<16u>, int>, onoro::GameHash<16u>, onoro::GameEq<16u>, std::allocator<std::pair<onoro::GameView<16u> const, int> > >::const_iterator TranspositionTable::tryFindSymmetries<onoro::SymmetryClassOp<(onoro::SymmetryClass)2> >(onoro::GameView<16u>, onoro::Game<16u>::BoardSymmetryState) [34]
                0.02    0.09  346183/13766898     absl::container_internal::raw_hash_set<absl::container_internal::FlatHashMapPolicy<onoro::GameView<16u>, int>, onoro::GameHash<16u>, onoro::GameEq<16u>, std::allocator<std::pair<onoro::GameView<16u> const, int> > >::const_iterator TranspositionTable::tryFindSymmetries<onoro::SymmetryClassOp<(onoro::SymmetryClass)5> >(onoro::GameView<16u>, onoro::Game<16u>::BoardSymmetryState) [30]
                0.05    0.21  862088/13766898     absl::container_internal::raw_hash_set<absl::container_internal::FlatHashMapPolicy<onoro::GameView<16u>, int>, onoro::GameHash<16u>, onoro::GameEq<16u>, std::allocator<std::pair<onoro::GameView<16u> const, int> > >::const_iterator TranspositionTable::tryFindSymmetries<onoro::SymmetryClassOp<(onoro::SymmetryClass)3> >(onoro::GameView<16u>, onoro::Game<16u>::BoardSymmetryState) [21]
                0.05    0.23  935283/13766898     std::pair<absl::container_internal::raw_hash_set<absl::container_internal::FlatHashMapPolicy<onoro::GameView<16u>, int>, onoro::GameHash<16u>, onoro::GameEq<16u>, std::allocator<std::pair<onoro::GameView<16u> const, int> > >::iterator, bool> absl::container_internal::raw_hash_set<absl::container_internal::FlatHashMapPolicy<onoro::GameView<16u>, int>, onoro::GameHash<16u>, onoro::GameEq<16u>, std::allocator<std::pair<onoro::GameView<16u> const, int> > >::EmplaceDecomposable::operator()<onoro::GameView<16u>, std::piecewise_construct_t const&, std::tuple<onoro::GameView<16u>&&>, std::tuple<int&&> >(onoro::GameView<16u> const&, std::piecewise_construct_t const&, std::tuple<onoro::GameView<16u>&&>&&, std::tuple<int&&>&&) const [16]
                0.07    0.29 1164849/13766898     absl::container_internal::raw_hash_set<absl::container_internal::FlatHashMapPolicy<onoro::GameView<16u>, int>, onoro::GameHash<16u>, onoro::GameEq<16u>, std::allocator<std::pair<onoro::GameView<16u> const, int> > >::const_iterator TranspositionTable::tryFindSymmetries<onoro::SymmetryClassOp<(onoro::SymmetryClass)4> >(onoro::GameView<16u>, onoro::Game<16u>::BoardSymmetryState) [19]
                0.23    0.99 4025294/13766898     absl::container_internal::raw_hash_set<absl::container_internal::FlatHashMapPolicy<onoro::GameView<16u>, int>, onoro::GameHash<16u>, onoro::GameEq<16u>, std::allocator<std::pair<onoro::GameView<16u> const, int> > >::const_iterator TranspositionTable::tryFindSymmetries<onoro::SymmetryClassOp<(onoro::SymmetryClass)6> >(onoro::GameView<16u>, onoro::Game<16u>::BoardSymmetryState) [10]
                0.35    1.53 6222509/13766898     std::pair<absl::container_internal::raw_hash_set<absl::container_internal::FlatHashMapPolicy<onoro::GameView<16u>, int>, onoro::GameHash<16u>, onoro::GameEq<16u>, std::allocator<std::pair<onoro::GameView<16u> const, int> > >::iterator, bool> absl::container_internal::raw_hash_map<absl::container_internal::FlatHashMapPolicy<onoro::GameView<16u>, int>, onoro::GameHash<16u>, onoro::GameEq<16u>, std::allocator<std::pair<onoro::GameView<16u> const, int> > >::insert_or_assign_impl<onoro::GameView<16u> const&, int const&>(onoro::GameView<16u> const&, int const&) [11]
[7]      5.5    0.77    3.39 13766898         onoro::GameEq<16u>::operator()(onoro::GameView<16u> const&, onoro::GameView<16u> const&) const [7]
                0.17    1.66 8278836/8278836     bool onoro::GameEq<16u>::compareViews<onoro::SymmetryClassOp<(onoro::SymmetryClass)6> >(onoro::GameView<16u> const&, onoro::GameView<16u> const&, onoro::Game<16u>::BoardSymmetryState, onoro::Game<16u>::BoardSymmetryState) [12]
                0.56    0.00 27533796/47027828     onoro::Game<16u>::calcSymmetryState() const [17]
                0.07    0.35 1878176/1878176     bool onoro::GameEq<16u>::compareViews<onoro::SymmetryClassOp<(onoro::SymmetryClass)4> >(onoro::GameView<16u> const&, onoro::GameView<16u> const&, onoro::Game<16u>::BoardSymmetryState, onoro::Game<16u>::BoardSymmetryState) [20]
                0.07    0.30 1375219/1375219     bool onoro::GameEq<16u>::compareViews<onoro::SymmetryClassOp<(onoro::SymmetryClass)3> >(onoro::GameView<16u> const&, onoro::GameView<16u> const&, onoro::Game<16u>::BoardSymmetryState, onoro::Game<16u>::BoardSymmetryState) [22]
                0.02    0.14  542553/542553      bool onoro::GameEq<16u>::compareViews<onoro::SymmetryClassOp<(onoro::SymmetryClass)5> >(onoro::GameView<16u> const&, onoro::GameView<16u> const&, onoro::Game<16u>::BoardSymmetryState, onoro::Game<16u>::BoardSymmetryState) [28]
                0.00    0.03   52683/52683       bool onoro::GameEq<16u>::compareViews<onoro::SymmetryClassOp<(onoro::SymmetryClass)0> >(onoro::GameView<16u> const&, onoro::GameView<16u> const&, onoro::Game<16u>::BoardSymmetryState, onoro::Game<16u>::BoardSymmetryState) [37]
                0.00    0.02  156238/156238      bool onoro::GameEq<16u>::compareViews<onoro::SymmetryClassOp<(onoro::SymmetryClass)2> >(onoro::GameView<16u> const&, onoro::GameView<16u> const&, onoro::Game<16u>::BoardSymmetryState, onoro::Game<16u>::BoardSymmetryState) [40]
                0.00    0.00     692/692         bool onoro::GameEq<16u>::compareViews<onoro::SymmetryClassOp<(onoro::SymmetryClass)1> >(onoro::GameView<16u> const&, onoro::GameView<16u> const&, onoro::Game<16u>::BoardSymmetryState, onoro::Game<16u>::BoardSymmetryState) [45]
-----------------------------------------------
                0.00    0.08  238538/9747016     onoro::Game<16u>::forEachMove<findMove<16u, onoro::P1Move>(onoro::Game<16u> const&, TranspositionTable&, int, int, int)::{lambda(onoro::P1Move)#2}>(findMove<16u, onoro::P1Move>(onoro::Game<16u> const&, TranspositionTable&, int, int, int)::{lambda(onoro::P1Move)#2}) const::{lambda(std::pair<int, int>)#1}::operator()(std::pair<int, int>) const::{lambda(std::pair<int, int>)#1}::operator()(std::pair<int, int>) const <cycle 1> [3]
                0.08    3.36 9508478/9747016     std::pair<int, onoro::P2Move> findMove<16u, onoro::P2Move>(onoro::Game<16u> const&, TranspositionTable&, int, int, int) [4]
[8]      4.7    0.08    3.45 9747016         TranspositionTable::find(onoro::GameView<16u> const&) [8]
                0.78    1.22 6370260/6370260     absl::container_internal::raw_hash_set<absl::container_internal::FlatHashMapPolicy<onoro::GameView<16u>, int>, onoro::GameHash<16u>, onoro::GameEq<16u>, std::allocator<std::pair<onoro::GameView<16u> const, int> > >::const_iterator TranspositionTable::tryFindSymmetries<onoro::SymmetryClassOp<(onoro::SymmetryClass)6> >(onoro::GameView<16u>, onoro::Game<16u>::BoardSymmetryState) [10]
                0.24    0.35 1575003/1575003     absl::container_internal::raw_hash_set<absl::container_internal::FlatHashMapPolicy<onoro::GameView<16u>, int>, onoro::GameHash<16u>, onoro::GameEq<16u>, std::allocator<std::pair<onoro::GameView<16u> const, int> > >::const_iterator TranspositionTable::tryFindSymmetries<onoro::SymmetryClassOp<(onoro::SymmetryClass)4> >(onoro::GameView<16u>, onoro::Game<16u>::BoardSymmetryState) [19]
                0.14    0.26 1163088/1163088     absl::container_internal::raw_hash_set<absl::container_internal::FlatHashMapPolicy<onoro::GameView<16u>, int>, onoro::GameHash<16u>, onoro::GameEq<16u>, std::allocator<std::pair<onoro::GameView<16u> const, int> > >::const_iterator TranspositionTable::tryFindSymmetries<onoro::SymmetryClassOp<(onoro::SymmetryClass)3> >(onoro::GameView<16u>, onoro::Game<16u>::BoardSymmetryState) [21]
                0.20    0.00 9747016/47027828     onoro::Game<16u>::calcSymmetryState() const [17]
                0.02    0.10  467158/467158      absl::container_internal::raw_hash_set<absl::container_internal::FlatHashMapPolicy<onoro::GameView<16u>, int>, onoro::GameHash<16u>, onoro::GameEq<16u>, std::allocator<std::pair<onoro::GameView<16u> const, int> > >::const_iterator TranspositionTable::tryFindSymmetries<onoro::SymmetryClassOp<(onoro::SymmetryClass)5> >(onoro::GameView<16u>, onoro::Game<16u>::BoardSymmetryState) [30]
                0.04    0.04  131705/131705      absl::container_internal::raw_hash_set<absl::container_internal::FlatHashMapPolicy<onoro::GameView<16u>, int>, onoro::GameHash<16u>, onoro::GameEq<16u>, std::allocator<std::pair<onoro::GameView<16u> const, int> > >::const_iterator TranspositionTable::tryFindSymmetries<onoro::SymmetryClassOp<(onoro::SymmetryClass)2> >(onoro::GameView<16u>, onoro::Game<16u>::BoardSymmetryState) [34]
                0.03    0.02   39145/39145       absl::container_internal::raw_hash_set<absl::container_internal::FlatHashMapPolicy<onoro::GameView<16u>, int>, onoro::GameHash<16u>, onoro::GameEq<16u>, std::allocator<std::pair<onoro::GameView<16u> const, int> > >::const_iterator TranspositionTable::tryFindSymmetries<onoro::SymmetryClassOp<(onoro::SymmetryClass)0> >(onoro::GameView<16u>, onoro::Game<16u>::BoardSymmetryState) [35]
                0.00    0.00     657/657         absl::container_internal::raw_hash_set<absl::container_internal::FlatHashMapPolicy<onoro::GameView<16u>, int>, onoro::GameHash<16u>, onoro::GameEq<16u>, std::allocator<std::pair<onoro::GameView<16u> const, int> > >::const_iterator TranspositionTable::tryFindSymmetries<onoro::SymmetryClassOp<(onoro::SymmetryClass)1> >(onoro::GameView<16u>, onoro::Game<16u>::BoardSymmetryState) [43]
-----------------------------------------------
                0.03    0.05  238538/9747016     onoro::Game<16u>::forEachMove<findMove<16u, onoro::P1Move>(onoro::Game<16u> const&, TranspositionTable&, int, int, int)::{lambda(onoro::P1Move)#2}>(findMove<16u, onoro::P1Move>(onoro::Game<16u> const&, TranspositionTable&, int, int, int)::{lambda(onoro::P1Move)#2}) const::{lambda(std::pair<int, int>)#1}::operator()(std::pair<int, int>) const::{lambda(std::pair<int, int>)#1}::operator()(std::pair<int, int>) const <cycle 1> [3]
                1.34    1.87 9508478/9747016     std::pair<int, onoro::P2Move> findMove<16u, onoro::P2Move>(onoro::Game<16u> const&, TranspositionTable&, int, int, int) [4]
[9]      4.4    1.37    1.92 9747016         onoro::GameHash<16u>::calcHash(onoro::Game<16u> const&) [9]
                1.28    0.44 9747016/9747016     bool onoro::Game<16u>::forEachPawn<onoro::GameHash<16u>::calcHash(onoro::Game<16u> const&)::{lambda(std::pair<int, int>)#1}>(onoro::GameHash<16u>::calcHash(onoro::Game<16u> const&)::{lambda(std::pair<int, int>)#1}) const [13]
                0.20    0.00 9747016/47027828     onoro::Game<16u>::calcSymmetryState() const [17]
-----------------------------------------------
                0.78    1.22 6370260/6370260     TranspositionTable::find(onoro::GameView<16u> const&) [8]
[10]     2.6    0.78    1.22 6370260         absl::container_internal::raw_hash_set<absl::container_internal::FlatHashMapPolicy<onoro::GameView<16u>, int>, onoro::GameHash<16u>, onoro::GameEq<16u>, std::allocator<std::pair<onoro::GameView<16u> const, int> > >::const_iterator TranspositionTable::tryFindSymmetries<onoro::SymmetryClassOp<(onoro::SymmetryClass)6> >(onoro::GameView<16u>, onoro::Game<16u>::BoardSymmetryState) [10]
                0.23    0.99 4025294/13766898     onoro::GameEq<16u>::operator()(onoro::GameView<16u> const&, onoro::GameView<16u> const&) const [7]
-----------------------------------------------
                0.00    0.05  146113/5602984     onoro::Game<16u>::forEachMove<findMove<16u, onoro::P1Move>(onoro::Game<16u> const&, TranspositionTable&, int, int, int)::{lambda(onoro::P1Move)#2}>(findMove<16u, onoro::P1Move>(onoro::Game<16u> const&, TranspositionTable&, int, int, int)::{lambda(onoro::P1Move)#2}) const::{lambda(std::pair<int, int>)#1}::operator()(std::pair<int, int>) const::{lambda(std::pair<int, int>)#1}::operator()(std::pair<int, int>) const <cycle 1> [3]
                0.08    1.83 5456871/5602984     std::pair<int, onoro::P2Move> findMove<16u, onoro::P2Move>(onoro::Game<16u> const&, TranspositionTable&, int, int, int) [4]
[11]     2.6    0.08    1.88 5602984         std::pair<absl::container_internal::raw_hash_set<absl::container_internal::FlatHashMapPolicy<onoro::GameView<16u>, int>, onoro::GameHash<16u>, onoro::GameEq<16u>, std::allocator<std::pair<onoro::GameView<16u> const, int> > >::iterator, bool> absl::container_internal::raw_hash_map<absl::container_internal::FlatHashMapPolicy<onoro::GameView<16u>, int>, onoro::GameHash<16u>, onoro::GameEq<16u>, std::allocator<std::pair<onoro::GameView<16u> const, int> > >::insert_or_assign_impl<onoro::GameView<16u> const&, int const&>(onoro::GameView<16u> const&, int const&) [11]
                0.35    1.53 6222509/13766898     onoro::GameEq<16u>::operator()(onoro::GameView<16u> const&, onoro::GameView<16u> const&) const [7]
-----------------------------------------------
                0.17    1.66 8278836/8278836     onoro::GameEq<16u>::operator()(onoro::GameView<16u> const&, onoro::GameView<16u> const&) const [7]
[12]     2.4    0.17    1.66 8278836         bool onoro::GameEq<16u>::compareViews<onoro::SymmetryClassOp<(onoro::SymmetryClass)6> >(onoro::GameView<16u> const&, onoro::GameView<16u> const&, onoro::Game<16u>::BoardSymmetryState, onoro::Game<16u>::BoardSymmetryState) [12]
                1.08    0.58 6370260/6370260     bool onoro::Game<16u>::forEachPawn<onoro::GameEq<16u>::compareViews<onoro::SymmetryClassOp<(onoro::SymmetryClass)6> >(onoro::GameView<16u> const&, onoro::GameView<16u> const&, onoro::Game<16u>::BoardSymmetryState, onoro::Game<16u>::BoardSymmetryState)::{lambda(std::pair<int, int>)#1}>(onoro::GameEq<16u>::compareViews<onoro::SymmetryClassOp<(onoro::SymmetryClass)6> >(onoro::GameView<16u> const&, onoro::GameView<16u> const&, onoro::Game<16u>::BoardSymmetryState, onoro::Game<16u>::BoardSymmetryState)::{lambda(std::pair<int, int>)#1}) const [14]
-----------------------------------------------
                1.28    0.44 9747016/9747016     onoro::GameHash<16u>::calcHash(onoro::Game<16u> const&) [9]
[13]     2.3    1.28    0.44 9747016         bool onoro::Game<16u>::forEachPawn<onoro::GameHash<16u>::calcHash(onoro::Game<16u> const&)::{lambda(std::pair<int, int>)#1}>(onoro::GameHash<16u>::calcHash(onoro::Game<16u> const&)::{lambda(std::pair<int, int>)#1}) const [13]
                0.44    0.00 155799668/468060075     onoro::HexPos::apply_d6_c(util::math::group::Dihedral<6u>) const [15]
-----------------------------------------------
                1.08    0.58 6370260/6370260     bool onoro::GameEq<16u>::compareViews<onoro::SymmetryClassOp<(onoro::SymmetryClass)6> >(onoro::GameView<16u> const&, onoro::GameView<16u> const&, onoro::Game<16u>::BoardSymmetryState, onoro::Game<16u>::BoardSymmetryState) [12]
[14]     2.2    1.08    0.58 6370260         bool onoro::Game<16u>::forEachPawn<onoro::GameEq<16u>::compareViews<onoro::SymmetryClassOp<(onoro::SymmetryClass)6> >(onoro::GameView<16u> const&, onoro::GameView<16u> const&, onoro::Game<16u>::BoardSymmetryState, onoro::Game<16u>::BoardSymmetryState)::{lambda(std::pair<int, int>)#1}>(onoro::GameEq<16u>::compareViews<onoro::SymmetryClassOp<(onoro::SymmetryClass)6> >(onoro::GameView<16u> const&, onoro::GameView<16u> const&, onoro::Game<16u>::BoardSymmetryState, onoro::Game<16u>::BoardSymmetryState)::{lambda(std::pair<int, int>)#1}) const [14]
                0.58    0.00 203662752/468060075     onoro::HexPos::apply_d6_c(util::math::group::Dihedral<6u>) const [15]
-----------------------------------------------
                0.00    0.00   19194/468060075     onoro::GameEq<16u>::compareViews<onoro::SymmetryClassOp<(onoro::SymmetryClass)1> >(onoro::GameView<16u> const&, onoro::GameView<16u> const&, onoro::Game<16u>::BoardSymmetryState, onoro::Game<16u>::BoardSymmetryState)::{lambda(std::pair<int, int>)#1}::operator()(std::pair<int, int>) const [44]
                0.01    0.00 1911417/468060075     onoro::GameEq<16u>::compareViews<onoro::SymmetryClassOp<(onoro::SymmetryClass)0> >(onoro::GameView<16u> const&, onoro::GameView<16u> const&, onoro::Game<16u>::BoardSymmetryState, onoro::Game<16u>::BoardSymmetryState)::{lambda(std::pair<int, int>)#1}::operator()(std::pair<int, int>) const [42]
                0.01    0.00 4208924/468060075     onoro::GameEq<16u>::compareViews<onoro::SymmetryClassOp<(onoro::SymmetryClass)2> >(onoro::GameView<16u> const&, onoro::GameView<16u> const&, onoro::Game<16u>::BoardSymmetryState, onoro::Game<16u>::BoardSymmetryState)::{lambda(std::pair<int, int>)#1}::operator()(std::pair<int, int>) const [39]
                0.04    0.00 14931240/468060075     onoro::GameEq<16u>::compareViews<onoro::SymmetryClassOp<(onoro::SymmetryClass)5> >(onoro::GameView<16u> const&, onoro::GameView<16u> const&, onoro::Game<16u>::BoardSymmetryState, onoro::Game<16u>::BoardSymmetryState)::{lambda(std::pair<int, int>)#1}::operator()(std::pair<int, int>) const [31]
                0.11    0.00 37179178/468060075     bool onoro::Game<16u>::forEachPawn<onoro::GameEq<16u>::compareViews<onoro::SymmetryClassOp<(onoro::SymmetryClass)3> >(onoro::GameView<16u> const&, onoro::GameView<16u> const&, onoro::Game<16u>::BoardSymmetryState, onoro::Game<16u>::BoardSymmetryState)::{lambda(std::pair<int, int>)#1}>(onoro::GameEq<16u>::compareViews<onoro::SymmetryClassOp<(onoro::SymmetryClass)3> >(onoro::GameView<16u> const&, onoro::GameView<16u> const&, onoro::Game<16u>::BoardSymmetryState, onoro::Game<16u>::BoardSymmetryState)::{lambda(std::pair<int, int>)#1}) const [25]
                0.14    0.00 50347702/468060075     bool onoro::Game<16u>::forEachPawn<onoro::GameEq<16u>::compareViews<onoro::SymmetryClassOp<(onoro::SymmetryClass)4> >(onoro::GameView<16u> const&, onoro::GameView<16u> const&, onoro::Game<16u>::BoardSymmetryState, onoro::Game<16u>::BoardSymmetryState)::{lambda(std::pair<int, int>)#1}>(onoro::GameEq<16u>::compareViews<onoro::SymmetryClassOp<(onoro::SymmetryClass)4> >(onoro::GameView<16u> const&, onoro::GameView<16u> const&, onoro::Game<16u>::BoardSymmetryState, onoro::Game<16u>::BoardSymmetryState)::{lambda(std::pair<int, int>)#1}) const [23]
                0.44    0.00 155799668/468060075     bool onoro::Game<16u>::forEachPawn<onoro::GameHash<16u>::calcHash(onoro::Game<16u> const&)::{lambda(std::pair<int, int>)#1}>(onoro::GameHash<16u>::calcHash(onoro::Game<16u> const&)::{lambda(std::pair<int, int>)#1}) const [13]
                0.58    0.00 203662752/468060075     bool onoro::Game<16u>::forEachPawn<onoro::GameEq<16u>::compareViews<onoro::SymmetryClassOp<(onoro::SymmetryClass)6> >(onoro::GameView<16u> const&, onoro::GameView<16u> const&, onoro::Game<16u>::BoardSymmetryState, onoro::Game<16u>::BoardSymmetryState)::{lambda(std::pair<int, int>)#1}>(onoro::GameEq<16u>::compareViews<onoro::SymmetryClassOp<(onoro::SymmetryClass)6> >(onoro::GameView<16u> const&, onoro::GameView<16u> const&, onoro::Game<16u>::BoardSymmetryState, onoro::Game<16u>::BoardSymmetryState)::{lambda(std::pair<int, int>)#1}) const [14]
[15]     1.8    1.33    0.00 468060075         onoro::HexPos::apply_d6_c(util::math::group::Dihedral<6u>) const [15]
-----------------------------------------------
                0.01    0.01  146113/5602984     TranspositionTable::insert(onoro::GameView<16u> const&, int) [36]
                0.49    0.53 5456871/5602984     std::pair<int, onoro::P2Move> findMove<16u, onoro::P2Move>(onoro::Game<16u> const&, TranspositionTable&, int, int, int) [4]
[16]     1.4    0.50    0.54 5602984         std::pair<absl::container_internal::raw_hash_set<absl::container_internal::FlatHashMapPolicy<onoro::GameView<16u>, int>, onoro::GameHash<16u>, onoro::GameEq<16u>, std::allocator<std::pair<onoro::GameView<16u> const, int> > >::iterator, bool> absl::container_internal::raw_hash_set<absl::container_internal::FlatHashMapPolicy<onoro::GameView<16u>, int>, onoro::GameHash<16u>, onoro::GameEq<16u>, std::allocator<std::pair<onoro::GameView<16u> const, int> > >::EmplaceDecomposable::operator()<onoro::GameView<16u>, std::piecewise_construct_t const&, std::tuple<onoro::GameView<16u>&&>, std::tuple<int&&> >(onoro::GameView<16u> const&, std::piecewise_construct_t const&, std::tuple<onoro::GameView<16u>&&>&&, std::tuple<int&&>&&) const [16]
                0.05    0.23  935283/13766898     onoro::GameEq<16u>::operator()(onoro::GameView<16u> const&, onoro::GameView<16u> const&) const [7]
                0.02    0.24 5602984/5602984     absl::container_internal::raw_hash_set<absl::container_internal::FlatHashMapPolicy<onoro::GameView<16u>, int>, onoro::GameHash<16u>, onoro::GameEq<16u>, std::allocator<std::pair<onoro::GameView<16u> const, int> > >::prepare_insert(unsigned long) [26]
-----------------------------------------------
                0.20    0.00 9747016/47027828     TranspositionTable::find(onoro::GameView<16u> const&) [8]
                0.20    0.00 9747016/47027828     onoro::GameHash<16u>::calcHash(onoro::Game<16u> const&) [9]
                0.56    0.00 27533796/47027828     onoro::GameEq<16u>::operator()(onoro::GameView<16u> const&, onoro::GameView<16u> const&) const [7]
[17]     1.3    0.96    0.00 47027828         onoro::Game<16u>::calcSymmetryState() const [17]
-----------------------------------------------
                0.00    0.00  849587/194770127     onoro::Game<16u>::Game(onoro::Game<16u> const&, onoro::P1Move) [32]
                0.92    0.00 193920540/194770127     onoro::Game<16u>::Game(onoro::Game<16u> const&, onoro::P2Move) [5]
[18]     1.2    0.92    0.00 194770127         onoro::Game<16u>::copyAndShift(unsigned long*, unsigned long const*, unsigned long, int) [18]
-----------------------------------------------
                0.24    0.35 1575003/1575003     TranspositionTable::find(onoro::GameView<16u> const&) [8]
[19]     0.8    0.24    0.35 1575003         absl::container_internal::raw_hash_set<absl::container_internal::FlatHashMapPolicy<onoro::GameView<16u>, int>, onoro::GameHash<16u>, onoro::GameEq<16u>, std::allocator<std::pair<onoro::GameView<16u> const, int> > >::const_iterator TranspositionTable::tryFindSymmetries<onoro::SymmetryClassOp<(onoro::SymmetryClass)4> >(onoro::GameView<16u>, onoro::Game<16u>::BoardSymmetryState) [19]
                0.07    0.29 1164849/13766898     onoro::GameEq<16u>::operator()(onoro::GameView<16u> const&, onoro::GameView<16u> const&) const [7]
-----------------------------------------------
                0.07    0.35 1878176/1878176     onoro::GameEq<16u>::operator()(onoro::GameView<16u> const&, onoro::GameView<16u> const&) const [7]
[20]     0.6    0.07    0.35 1878176         bool onoro::GameEq<16u>::compareViews<onoro::SymmetryClassOp<(onoro::SymmetryClass)4> >(onoro::GameView<16u> const&, onoro::GameView<16u> const&, onoro::Game<16u>::BoardSymmetryState, onoro::Game<16u>::BoardSymmetryState) [20]
                0.21    0.14 1575003/1575003     bool onoro::Game<16u>::forEachPawn<onoro::GameEq<16u>::compareViews<onoro::SymmetryClassOp<(onoro::SymmetryClass)4> >(onoro::GameView<16u> const&, onoro::GameView<16u> const&, onoro::Game<16u>::BoardSymmetryState, onoro::Game<16u>::BoardSymmetryState)::{lambda(std::pair<int, int>)#1}>(onoro::GameEq<16u>::compareViews<onoro::SymmetryClassOp<(onoro::SymmetryClass)4> >(onoro::GameView<16u> const&, onoro::GameView<16u> const&, onoro::Game<16u>::BoardSymmetryState, onoro::Game<16u>::BoardSymmetryState)::{lambda(std::pair<int, int>)#1}) const [23]
-----------------------------------------------
                0.14    0.26 1163088/1163088     TranspositionTable::find(onoro::GameView<16u> const&) [8]
[21]     0.5    0.14    0.26 1163088         absl::container_internal::raw_hash_set<absl::container_internal::FlatHashMapPolicy<onoro::GameView<16u>, int>, onoro::GameHash<16u>, onoro::GameEq<16u>, std::allocator<std::pair<onoro::GameView<16u> const, int> > >::const_iterator TranspositionTable::tryFindSymmetries<onoro::SymmetryClassOp<(onoro::SymmetryClass)3> >(onoro::GameView<16u>, onoro::Game<16u>::BoardSymmetryState) [21]
                0.05    0.21  862088/13766898     onoro::GameEq<16u>::operator()(onoro::GameView<16u> const&, onoro::GameView<16u> const&) const [7]
-----------------------------------------------
                0.07    0.30 1375219/1375219     onoro::GameEq<16u>::operator()(onoro::GameView<16u> const&, onoro::GameView<16u> const&) const [7]
[22]     0.5    0.07    0.30 1375219         bool onoro::GameEq<16u>::compareViews<onoro::SymmetryClassOp<(onoro::SymmetryClass)3> >(onoro::GameView<16u> const&, onoro::GameView<16u> const&, onoro::Game<16u>::BoardSymmetryState, onoro::Game<16u>::BoardSymmetryState) [22]
                0.19    0.11 1163088/1163088     bool onoro::Game<16u>::forEachPawn<onoro::GameEq<16u>::compareViews<onoro::SymmetryClassOp<(onoro::SymmetryClass)3> >(onoro::GameView<16u> const&, onoro::GameView<16u> const&, onoro::Game<16u>::BoardSymmetryState, onoro::Game<16u>::BoardSymmetryState)::{lambda(std::pair<int, int>)#1}>(onoro::GameEq<16u>::compareViews<onoro::SymmetryClassOp<(onoro::SymmetryClass)3> >(onoro::GameView<16u> const&, onoro::GameView<16u> const&, onoro::Game<16u>::BoardSymmetryState, onoro::Game<16u>::BoardSymmetryState)::{lambda(std::pair<int, int>)#1}) const [25]
-----------------------------------------------
                0.21    0.14 1575003/1575003     bool onoro::GameEq<16u>::compareViews<onoro::SymmetryClassOp<(onoro::SymmetryClass)4> >(onoro::GameView<16u> const&, onoro::GameView<16u> const&, onoro::Game<16u>::BoardSymmetryState, onoro::Game<16u>::BoardSymmetryState) [20]
[23]     0.5    0.21    0.14 1575003         bool onoro::Game<16u>::forEachPawn<onoro::GameEq<16u>::compareViews<onoro::SymmetryClassOp<(onoro::SymmetryClass)4> >(onoro::GameView<16u> const&, onoro::GameView<16u> const&, onoro::Game<16u>::BoardSymmetryState, onoro::Game<16u>::BoardSymmetryState)::{lambda(std::pair<int, int>)#1}>(onoro::GameEq<16u>::compareViews<onoro::SymmetryClassOp<(onoro::SymmetryClass)4> >(onoro::GameView<16u> const&, onoro::GameView<16u> const&, onoro::Game<16u>::BoardSymmetryState, onoro::Game<16u>::BoardSymmetryState)::{lambda(std::pair<int, int>)#1}) const [23]
                0.14    0.00 50347702/468060075     onoro::HexPos::apply_d6_c(util::math::group::Dihedral<6u>) const [15]
-----------------------------------------------
                                                 <spontaneous>
[24]     0.4    0.33    0.00                 _init [24]
-----------------------------------------------
                0.19    0.11 1163088/1163088     bool onoro::GameEq<16u>::compareViews<onoro::SymmetryClassOp<(onoro::SymmetryClass)3> >(onoro::GameView<16u> const&, onoro::GameView<16u> const&, onoro::Game<16u>::BoardSymmetryState, onoro::Game<16u>::BoardSymmetryState) [22]
[25]     0.4    0.19    0.11 1163088         bool onoro::Game<16u>::forEachPawn<onoro::GameEq<16u>::compareViews<onoro::SymmetryClassOp<(onoro::SymmetryClass)3> >(onoro::GameView<16u> const&, onoro::GameView<16u> const&, onoro::Game<16u>::BoardSymmetryState, onoro::Game<16u>::BoardSymmetryState)::{lambda(std::pair<int, int>)#1}>(onoro::GameEq<16u>::compareViews<onoro::SymmetryClassOp<(onoro::SymmetryClass)3> >(onoro::GameView<16u> const&, onoro::GameView<16u> const&, onoro::Game<16u>::BoardSymmetryState, onoro::Game<16u>::BoardSymmetryState)::{lambda(std::pair<int, int>)#1}) const [25]
                0.11    0.00 37179178/468060075     onoro::HexPos::apply_d6_c(util::math::group::Dihedral<6u>) const [15]
-----------------------------------------------
                0.02    0.24 5602984/5602984     std::pair<absl::container_internal::raw_hash_set<absl::container_internal::FlatHashMapPolicy<onoro::GameView<16u>, int>, onoro::GameHash<16u>, onoro::GameEq<16u>, std::allocator<std::pair<onoro::GameView<16u> const, int> > >::iterator, bool> absl::container_internal::raw_hash_set<absl::container_internal::FlatHashMapPolicy<onoro::GameView<16u>, int>, onoro::GameHash<16u>, onoro::GameEq<16u>, std::allocator<std::pair<onoro::GameView<16u> const, int> > >::EmplaceDecomposable::operator()<onoro::GameView<16u>, std::piecewise_construct_t const&, std::tuple<onoro::GameView<16u>&&>, std::tuple<int&&> >(onoro::GameView<16u> const&, std::piecewise_construct_t const&, std::tuple<onoro::GameView<16u>&&>&&, std::tuple<int&&>&&) const [16]
[26]     0.3    0.02    0.24 5602984         absl::container_internal::raw_hash_set<absl::container_internal::FlatHashMapPolicy<onoro::GameView<16u>, int>, onoro::GameHash<16u>, onoro::GameEq<16u>, std::allocator<std::pair<onoro::GameView<16u> const, int> > >::prepare_insert(unsigned long) [26]
                0.24    0.00      23/23          absl::container_internal::raw_hash_set<absl::container_internal::FlatHashMapPolicy<onoro::GameView<16u>, int>, onoro::GameHash<16u>, onoro::GameEq<16u>, std::allocator<std::pair<onoro::GameView<16u> const, int> > >::resize(unsigned long) [27]
                0.00    0.00      23/23          absl::container_internal::raw_hash_set<absl::container_internal::FlatHashMapPolicy<onoro::GameView<16u>, int>, onoro::GameHash<16u>, onoro::GameEq<16u>, std::allocator<std::pair<onoro::GameView<16u> const, int> > >::rehash_and_grow_if_necessary() [55]
-----------------------------------------------
                0.24    0.00      23/23          absl::container_internal::raw_hash_set<absl::container_internal::FlatHashMapPolicy<onoro::GameView<16u>, int>, onoro::GameHash<16u>, onoro::GameEq<16u>, std::allocator<std::pair<onoro::GameView<16u> const, int> > >::prepare_insert(unsigned long) [26]
[27]     0.3    0.24    0.00      23         absl::container_internal::raw_hash_set<absl::container_internal::FlatHashMapPolicy<onoro::GameView<16u>, int>, onoro::GameHash<16u>, onoro::GameEq<16u>, std::allocator<std::pair<onoro::GameView<16u> const, int> > >::resize(unsigned long) [27]
-----------------------------------------------
                0.02    0.14  542553/542553      onoro::GameEq<16u>::operator()(onoro::GameView<16u> const&, onoro::GameView<16u> const&) const [7]
[28]     0.2    0.02    0.14  542553         bool onoro::GameEq<16u>::compareViews<onoro::SymmetryClassOp<(onoro::SymmetryClass)5> >(onoro::GameView<16u> const&, onoro::GameView<16u> const&, onoro::Game<16u>::BoardSymmetryState, onoro::Game<16u>::BoardSymmetryState) [28]
                0.02    0.12  467158/467158      bool onoro::Game<16u>::forEachPawn<onoro::GameEq<16u>::compareViews<onoro::SymmetryClassOp<(onoro::SymmetryClass)5> >(onoro::GameView<16u> const&, onoro::GameView<16u> const&, onoro::Game<16u>::BoardSymmetryState, onoro::Game<16u>::BoardSymmetryState)::{lambda(std::pair<int, int>)#1}>(onoro::GameEq<16u>::compareViews<onoro::SymmetryClassOp<(onoro::SymmetryClass)5> >(onoro::GameView<16u> const&, onoro::GameView<16u> const&, onoro::Game<16u>::BoardSymmetryState, onoro::Game<16u>::BoardSymmetryState)::{lambda(std::pair<int, int>)#1}) const [29]
-----------------------------------------------
                0.02    0.12  467158/467158      bool onoro::GameEq<16u>::compareViews<onoro::SymmetryClassOp<(onoro::SymmetryClass)5> >(onoro::GameView<16u> const&, onoro::GameView<16u> const&, onoro::Game<16u>::BoardSymmetryState, onoro::Game<16u>::BoardSymmetryState) [28]
[29]     0.2    0.02    0.12  467158         bool onoro::Game<16u>::forEachPawn<onoro::GameEq<16u>::compareViews<onoro::SymmetryClassOp<(onoro::SymmetryClass)5> >(onoro::GameView<16u> const&, onoro::GameView<16u> const&, onoro::Game<16u>::BoardSymmetryState, onoro::Game<16u>::BoardSymmetryState)::{lambda(std::pair<int, int>)#1}>(onoro::GameEq<16u>::compareViews<onoro::SymmetryClassOp<(onoro::SymmetryClass)5> >(onoro::GameView<16u> const&, onoro::GameView<16u> const&, onoro::Game<16u>::BoardSymmetryState, onoro::Game<16u>::BoardSymmetryState)::{lambda(std::pair<int, int>)#1}) const [29]
                0.08    0.04 7465620/7465620     onoro::GameEq<16u>::compareViews<onoro::SymmetryClassOp<(onoro::SymmetryClass)5> >(onoro::GameView<16u> const&, onoro::GameView<16u> const&, onoro::Game<16u>::BoardSymmetryState, onoro::Game<16u>::BoardSymmetryState)::{lambda(std::pair<int, int>)#1}::operator()(std::pair<int, int>) const [31]
-----------------------------------------------
                0.02    0.10  467158/467158      TranspositionTable::find(onoro::GameView<16u> const&) [8]
[30]     0.2    0.02    0.10  467158         absl::container_internal::raw_hash_set<absl::container_internal::FlatHashMapPolicy<onoro::GameView<16u>, int>, onoro::GameHash<16u>, onoro::GameEq<16u>, std::allocator<std::pair<onoro::GameView<16u> const, int> > >::const_iterator TranspositionTable::tryFindSymmetries<onoro::SymmetryClassOp<(onoro::SymmetryClass)5> >(onoro::GameView<16u>, onoro::Game<16u>::BoardSymmetryState) [30]
                0.02    0.09  346183/13766898     onoro::GameEq<16u>::operator()(onoro::GameView<16u> const&, onoro::GameView<16u> const&) const [7]
-----------------------------------------------
                0.08    0.04 7465620/7465620     bool onoro::Game<16u>::forEachPawn<onoro::GameEq<16u>::compareViews<onoro::SymmetryClassOp<(onoro::SymmetryClass)5> >(onoro::GameView<16u> const&, onoro::GameView<16u> const&, onoro::Game<16u>::BoardSymmetryState, onoro::Game<16u>::BoardSymmetryState)::{lambda(std::pair<int, int>)#1}>(onoro::GameEq<16u>::compareViews<onoro::SymmetryClassOp<(onoro::SymmetryClass)5> >(onoro::GameView<16u> const&, onoro::GameView<16u> const&, onoro::Game<16u>::BoardSymmetryState, onoro::Game<16u>::BoardSymmetryState)::{lambda(std::pair<int, int>)#1}) const [29]
[31]     0.2    0.08    0.04 7465620         onoro::GameEq<16u>::compareViews<onoro::SymmetryClassOp<(onoro::SymmetryClass)5> >(onoro::GameView<16u> const&, onoro::GameView<16u> const&, onoro::Game<16u>::BoardSymmetryState, onoro::Game<16u>::BoardSymmetryState)::{lambda(std::pair<int, int>)#1}::operator()(std::pair<int, int>) const [31]
                0.04    0.00 14931240/468060075     onoro::HexPos::apply_d6_c(util::math::group::Dihedral<6u>) const [15]
-----------------------------------------------
                0.00    0.00       1/849587      main [1]
                0.01    0.02  238538/849587      onoro::Game<16u>::forEachMove<findMove<16u, onoro::P1Move>(onoro::Game<16u> const&, TranspositionTable&, int, int, int)::{lambda(onoro::P1Move)#2}>(findMove<16u, onoro::P1Move>(onoro::Game<16u> const&, TranspositionTable&, int, int, int)::{lambda(onoro::P1Move)#2}) const::{lambda(std::pair<int, int>)#1}::operator()(std::pair<int, int>) const::{lambda(std::pair<int, int>)#1}::operator()(std::pair<int, int>) const <cycle 1> [3]
                0.04    0.04  611048/849587      std::pair<int, onoro::P1Move> findMove<16u, onoro::P1Move>(onoro::Game<16u> const&, TranspositionTable&, int, int, int) <cycle 1> [33]
[32]     0.1    0.05    0.06  849587         onoro::Game<16u>::Game(onoro::Game<16u> const&, onoro::P1Move) [32]
                0.06    0.00  849587/194770127     onoro::Game<16u>::checkWin(std::pair<int, int>) const [6]
                0.00    0.00  849587/194770127     onoro::Game<16u>::copyAndShift(unsigned long*, unsigned long const*, unsigned long, int) [18]
-----------------------------------------------
                               78565             onoro::Game<16u>::forEachMove<findMove<16u, onoro::P1Move>(onoro::Game<16u> const&, TranspositionTable&, int, int, int)::{lambda(onoro::P1Move)#2}>(findMove<16u, onoro::P1Move>(onoro::Game<16u> const&, TranspositionTable&, int, int, int)::{lambda(onoro::P1Move)#2}) const::{lambda(std::pair<int, int>)#1}::operator()(std::pair<int, int>) const::{lambda(std::pair<int, int>)#1}::operator()(std::pair<int, int>) const <cycle 1> [3]
                0.03   75.05       1/1           main [1]
[33]     0.1    0.02    0.08   78566         std::pair<int, onoro::P1Move> findMove<16u, onoro::P1Move>(onoro::Game<16u> const&, TranspositionTable&, int, int, int) <cycle 1> [33]
                0.04    0.04  611048/849587      onoro::Game<16u>::Game(onoro::Game<16u> const&, onoro::P1Move) [32]
                             2087268             onoro::Game<16u>::forEachMove<findMove<16u, onoro::P1Move>(onoro::Game<16u> const&, TranspositionTable&, int, int, int)::{lambda(onoro::P1Move)#2}>(findMove<16u, onoro::P1Move>(onoro::Game<16u> const&, TranspositionTable&, int, int, int)::{lambda(onoro::P1Move)#2}) const::{lambda(std::pair<int, int>)#1}::operator()(std::pair<int, int>) const::{lambda(std::pair<int, int>)#1}::operator()(std::pair<int, int>) const <cycle 1> [3]
-----------------------------------------------
                0.04    0.04  131705/131705      TranspositionTable::find(onoro::GameView<16u> const&) [8]
[34]     0.1    0.04    0.04  131705         absl::container_internal::raw_hash_set<absl::container_internal::FlatHashMapPolicy<onoro::GameView<16u>, int>, onoro::GameHash<16u>, onoro::GameEq<16u>, std::allocator<std::pair<onoro::GameView<16u> const, int> > >::const_iterator TranspositionTable::tryFindSymmetries<onoro::SymmetryClassOp<(onoro::SymmetryClass)2> >(onoro::GameView<16u>, onoro::Game<16u>::BoardSymmetryState) [34]
                0.01    0.03  131228/13766898     onoro::GameEq<16u>::operator()(onoro::GameView<16u> const&, onoro::GameView<16u> const&) const [7]
-----------------------------------------------
                0.03    0.02   39145/39145       TranspositionTable::find(onoro::GameView<16u> const&) [8]
[35]     0.1    0.03    0.02   39145         absl::container_internal::raw_hash_set<absl::container_internal::FlatHashMapPolicy<onoro::GameView<16u>, int>, onoro::GameHash<16u>, onoro::GameEq<16u>, std::allocator<std::pair<onoro::GameView<16u> const, int> > >::const_iterator TranspositionTable::tryFindSymmetries<onoro::SymmetryClassOp<(onoro::SymmetryClass)0> >(onoro::GameView<16u>, onoro::Game<16u>::BoardSymmetryState) [35]
                0.00    0.02   78743/13766898     onoro::GameEq<16u>::operator()(onoro::GameView<16u> const&, onoro::GameView<16u> const&) const [7]
                0.00    0.00  573854/573854      void onoro::GameView<16u>::setOp<util::math::group::Dihedral<6u> >(util::math::group::Dihedral<6u>) [53]
-----------------------------------------------
                0.00    0.03  146113/146113      onoro::Game<16u>::forEachMove<findMove<16u, onoro::P1Move>(onoro::Game<16u> const&, TranspositionTable&, int, int, int)::{lambda(onoro::P1Move)#2}>(findMove<16u, onoro::P1Move>(onoro::Game<16u> const&, TranspositionTable&, int, int, int)::{lambda(onoro::P1Move)#2}) const::{lambda(std::pair<int, int>)#1}::operator()(std::pair<int, int>) const::{lambda(std::pair<int, int>)#1}::operator()(std::pair<int, int>) const <cycle 1> [3]
[36]     0.0    0.00    0.03  146113         TranspositionTable::insert(onoro::GameView<16u> const&, int) [36]
                0.01    0.01  146113/5602984     std::pair<absl::container_internal::raw_hash_set<absl::container_internal::FlatHashMapPolicy<onoro::GameView<16u>, int>, onoro::GameHash<16u>, onoro::GameEq<16u>, std::allocator<std::pair<onoro::GameView<16u> const, int> > >::iterator, bool> absl::container_internal::raw_hash_set<absl::container_internal::FlatHashMapPolicy<onoro::GameView<16u>, int>, onoro::GameHash<16u>, onoro::GameEq<16u>, std::allocator<std::pair<onoro::GameView<16u> const, int> > >::EmplaceDecomposable::operator()<onoro::GameView<16u>, std::piecewise_construct_t const&, std::tuple<onoro::GameView<16u>&&>, std::tuple<int&&> >(onoro::GameView<16u> const&, std::piecewise_construct_t const&, std::tuple<onoro::GameView<16u>&&>&&, std::tuple<int&&>&&) const [16]
-----------------------------------------------
                0.00    0.03   52683/52683       onoro::GameEq<16u>::operator()(onoro::GameView<16u> const&, onoro::GameView<16u> const&) const [7]
[37]     0.0    0.00    0.03   52683         bool onoro::GameEq<16u>::compareViews<onoro::SymmetryClassOp<(onoro::SymmetryClass)0> >(onoro::GameView<16u> const&, onoro::GameView<16u> const&, onoro::Game<16u>::BoardSymmetryState, onoro::Game<16u>::BoardSymmetryState) [37]
                0.01    0.02   42916/42916       bool onoro::Game<16u>::forEachPawn<onoro::GameEq<16u>::compareViews<onoro::SymmetryClassOp<(onoro::SymmetryClass)0> >(onoro::GameView<16u> const&, onoro::GameView<16u> const&, onoro::Game<16u>::BoardSymmetryState, onoro::Game<16u>::BoardSymmetryState)::{lambda(std::pair<int, int>)#1}>(onoro::GameEq<16u>::compareViews<onoro::SymmetryClassOp<(onoro::SymmetryClass)0> >(onoro::GameView<16u> const&, onoro::GameView<16u> const&, onoro::Game<16u>::BoardSymmetryState, onoro::Game<16u>::BoardSymmetryState)::{lambda(std::pair<int, int>)#1}) const [38]
-----------------------------------------------
                0.01    0.02   42916/42916       bool onoro::GameEq<16u>::compareViews<onoro::SymmetryClassOp<(onoro::SymmetryClass)0> >(onoro::GameView<16u> const&, onoro::GameView<16u> const&, onoro::Game<16u>::BoardSymmetryState, onoro::Game<16u>::BoardSymmetryState) [37]
[38]     0.0    0.01    0.02   42916         bool onoro::Game<16u>::forEachPawn<onoro::GameEq<16u>::compareViews<onoro::SymmetryClassOp<(onoro::SymmetryClass)0> >(onoro::GameView<16u> const&, onoro::GameView<16u> const&, onoro::Game<16u>::BoardSymmetryState, onoro::Game<16u>::BoardSymmetryState)::{lambda(std::pair<int, int>)#1}>(onoro::GameEq<16u>::compareViews<onoro::SymmetryClassOp<(onoro::SymmetryClass)0> >(onoro::GameView<16u> const&, onoro::GameView<16u> const&, onoro::Game<16u>::BoardSymmetryState, onoro::Game<16u>::BoardSymmetryState)::{lambda(std::pair<int, int>)#1}) const [38]
                0.01    0.01  637139/637139      onoro::GameEq<16u>::compareViews<onoro::SymmetryClassOp<(onoro::SymmetryClass)0> >(onoro::GameView<16u> const&, onoro::GameView<16u> const&, onoro::Game<16u>::BoardSymmetryState, onoro::Game<16u>::BoardSymmetryState)::{lambda(std::pair<int, int>)#1}::operator()(std::pair<int, int>) const [42]
-----------------------------------------------
                0.01    0.01 2104462/2104462     bool onoro::Game<16u>::forEachPawn<onoro::GameEq<16u>::compareViews<onoro::SymmetryClassOp<(onoro::SymmetryClass)2> >(onoro::GameView<16u> const&, onoro::GameView<16u> const&, onoro::Game<16u>::BoardSymmetryState, onoro::Game<16u>::BoardSymmetryState)::{lambda(std::pair<int, int>)#1}>(onoro::GameEq<16u>::compareViews<onoro::SymmetryClassOp<(onoro::SymmetryClass)2> >(onoro::GameView<16u> const&, onoro::GameView<16u> const&, onoro::Game<16u>::BoardSymmetryState, onoro::Game<16u>::BoardSymmetryState)::{lambda(std::pair<int, int>)#1}) const [41]
[39]     0.0    0.01    0.01 2104462         onoro::GameEq<16u>::compareViews<onoro::SymmetryClassOp<(onoro::SymmetryClass)2> >(onoro::GameView<16u> const&, onoro::GameView<16u> const&, onoro::Game<16u>::BoardSymmetryState, onoro::Game<16u>::BoardSymmetryState)::{lambda(std::pair<int, int>)#1}::operator()(std::pair<int, int>) const [39]
                0.01    0.00 4208924/468060075     onoro::HexPos::apply_d6_c(util::math::group::Dihedral<6u>) const [15]
-----------------------------------------------
                0.00    0.02  156238/156238      onoro::GameEq<16u>::operator()(onoro::GameView<16u> const&, onoro::GameView<16u> const&) const [7]
[40]     0.0    0.00    0.02  156238         bool onoro::GameEq<16u>::compareViews<onoro::SymmetryClassOp<(onoro::SymmetryClass)2> >(onoro::GameView<16u> const&, onoro::GameView<16u> const&, onoro::Game<16u>::BoardSymmetryState, onoro::Game<16u>::BoardSymmetryState) [40]
                0.00    0.02  131705/131705      bool onoro::Game<16u>::forEachPawn<onoro::GameEq<16u>::compareViews<onoro::SymmetryClassOp<(onoro::SymmetryClass)2> >(onoro::GameView<16u> const&, onoro::GameView<16u> const&, onoro::Game<16u>::BoardSymmetryState, onoro::Game<16u>::BoardSymmetryState)::{lambda(std::pair<int, int>)#1}>(onoro::GameEq<16u>::compareViews<onoro::SymmetryClassOp<(onoro::SymmetryClass)2> >(onoro::GameView<16u> const&, onoro::GameView<16u> const&, onoro::Game<16u>::BoardSymmetryState, onoro::Game<16u>::BoardSymmetryState)::{lambda(std::pair<int, int>)#1}) const [41]
-----------------------------------------------
                0.00    0.02  131705/131705      bool onoro::GameEq<16u>::compareViews<onoro::SymmetryClassOp<(onoro::SymmetryClass)2> >(onoro::GameView<16u> const&, onoro::GameView<16u> const&, onoro::Game<16u>::BoardSymmetryState, onoro::Game<16u>::BoardSymmetryState) [40]
[41]     0.0    0.00    0.02  131705         bool onoro::Game<16u>::forEachPawn<onoro::GameEq<16u>::compareViews<onoro::SymmetryClassOp<(onoro::SymmetryClass)2> >(onoro::GameView<16u> const&, onoro::GameView<16u> const&, onoro::Game<16u>::BoardSymmetryState, onoro::Game<16u>::BoardSymmetryState)::{lambda(std::pair<int, int>)#1}>(onoro::GameEq<16u>::compareViews<onoro::SymmetryClassOp<(onoro::SymmetryClass)2> >(onoro::GameView<16u> const&, onoro::GameView<16u> const&, onoro::Game<16u>::BoardSymmetryState, onoro::Game<16u>::BoardSymmetryState)::{lambda(std::pair<int, int>)#1}) const [41]
                0.01    0.01 2104462/2104462     onoro::GameEq<16u>::compareViews<onoro::SymmetryClassOp<(onoro::SymmetryClass)2> >(onoro::GameView<16u> const&, onoro::GameView<16u> const&, onoro::Game<16u>::BoardSymmetryState, onoro::Game<16u>::BoardSymmetryState)::{lambda(std::pair<int, int>)#1}::operator()(std::pair<int, int>) const [39]
-----------------------------------------------
                0.01    0.01  637139/637139      bool onoro::Game<16u>::forEachPawn<onoro::GameEq<16u>::compareViews<onoro::SymmetryClassOp<(onoro::SymmetryClass)0> >(onoro::GameView<16u> const&, onoro::GameView<16u> const&, onoro::Game<16u>::BoardSymmetryState, onoro::Game<16u>::BoardSymmetryState)::{lambda(std::pair<int, int>)#1}>(onoro::GameEq<16u>::compareViews<onoro::SymmetryClassOp<(onoro::SymmetryClass)0> >(onoro::GameView<16u> const&, onoro::GameView<16u> const&, onoro::Game<16u>::BoardSymmetryState, onoro::Game<16u>::BoardSymmetryState)::{lambda(std::pair<int, int>)#1}) const [38]
[42]     0.0    0.01    0.01  637139         onoro::GameEq<16u>::compareViews<onoro::SymmetryClassOp<(onoro::SymmetryClass)0> >(onoro::GameView<16u> const&, onoro::GameView<16u> const&, onoro::Game<16u>::BoardSymmetryState, onoro::Game<16u>::BoardSymmetryState)::{lambda(std::pair<int, int>)#1}::operator()(std::pair<int, int>) const [42]
                0.01    0.00 1911417/468060075     onoro::HexPos::apply_d6_c(util::math::group::Dihedral<6u>) const [15]
-----------------------------------------------
                0.00    0.00     657/657         TranspositionTable::find(onoro::GameView<16u> const&) [8]
[43]     0.0    0.00    0.00     657         absl::container_internal::raw_hash_set<absl::container_internal::FlatHashMapPolicy<onoro::GameView<16u>, int>, onoro::GameHash<16u>, onoro::GameEq<16u>, std::allocator<std::pair<onoro::GameView<16u> const, int> > >::const_iterator TranspositionTable::tryFindSymmetries<onoro::SymmetryClassOp<(onoro::SymmetryClass)1> >(onoro::GameView<16u>, onoro::Game<16u>::BoardSymmetryState) [43]
                0.00    0.00     721/13766898     onoro::GameEq<16u>::operator()(onoro::GameView<16u> const&, onoro::GameView<16u> const&) const [7]
                0.00    0.00    6908/6908        void onoro::GameView<16u>::setOp<util::math::group::Dihedral<3u> >(util::math::group::Dihedral<3u>) [54]
-----------------------------------------------
                0.00    0.00    9597/9597        bool onoro::Game<16u>::forEachPawn<onoro::GameEq<16u>::compareViews<onoro::SymmetryClassOp<(onoro::SymmetryClass)1> >(onoro::GameView<16u> const&, onoro::GameView<16u> const&, onoro::Game<16u>::BoardSymmetryState, onoro::Game<16u>::BoardSymmetryState)::{lambda(std::pair<int, int>)#1}>(onoro::GameEq<16u>::compareViews<onoro::SymmetryClassOp<(onoro::SymmetryClass)1> >(onoro::GameView<16u> const&, onoro::GameView<16u> const&, onoro::Game<16u>::BoardSymmetryState, onoro::Game<16u>::BoardSymmetryState)::{lambda(std::pair<int, int>)#1}) const [46]
[44]     0.0    0.00    0.00    9597         onoro::GameEq<16u>::compareViews<onoro::SymmetryClassOp<(onoro::SymmetryClass)1> >(onoro::GameView<16u> const&, onoro::GameView<16u> const&, onoro::Game<16u>::BoardSymmetryState, onoro::Game<16u>::BoardSymmetryState)::{lambda(std::pair<int, int>)#1}::operator()(std::pair<int, int>) const [44]
                0.00    0.00   19194/468060075     onoro::HexPos::apply_d6_c(util::math::group::Dihedral<6u>) const [15]
-----------------------------------------------
                0.00    0.00     692/692         onoro::GameEq<16u>::operator()(onoro::GameView<16u> const&, onoro::GameView<16u> const&) const [7]
[45]     0.0    0.00    0.00     692         bool onoro::GameEq<16u>::compareViews<onoro::SymmetryClassOp<(onoro::SymmetryClass)1> >(onoro::GameView<16u> const&, onoro::GameView<16u> const&, onoro::Game<16u>::BoardSymmetryState, onoro::Game<16u>::BoardSymmetryState) [45]
                0.00    0.00     667/667         bool onoro::Game<16u>::forEachPawn<onoro::GameEq<16u>::compareViews<onoro::SymmetryClassOp<(onoro::SymmetryClass)1> >(onoro::GameView<16u> const&, onoro::GameView<16u> const&, onoro::Game<16u>::BoardSymmetryState, onoro::Game<16u>::BoardSymmetryState)::{lambda(std::pair<int, int>)#1}>(onoro::GameEq<16u>::compareViews<onoro::SymmetryClassOp<(onoro::SymmetryClass)1> >(onoro::GameView<16u> const&, onoro::GameView<16u> const&, onoro::Game<16u>::BoardSymmetryState, onoro::Game<16u>::BoardSymmetryState)::{lambda(std::pair<int, int>)#1}) const [46]
-----------------------------------------------
                0.00    0.00     667/667         bool onoro::GameEq<16u>::compareViews<onoro::SymmetryClassOp<(onoro::SymmetryClass)1> >(onoro::GameView<16u> const&, onoro::GameView<16u> const&, onoro::Game<16u>::BoardSymmetryState, onoro::Game<16u>::BoardSymmetryState) [45]
[46]     0.0    0.00    0.00     667         bool onoro::Game<16u>::forEachPawn<onoro::GameEq<16u>::compareViews<onoro::SymmetryClassOp<(onoro::SymmetryClass)1> >(onoro::GameView<16u> const&, onoro::GameView<16u> const&, onoro::Game<16u>::BoardSymmetryState, onoro::Game<16u>::BoardSymmetryState)::{lambda(std::pair<int, int>)#1}>(onoro::GameEq<16u>::compareViews<onoro::SymmetryClassOp<(onoro::SymmetryClass)1> >(onoro::GameView<16u> const&, onoro::GameView<16u> const&, onoro::Game<16u>::BoardSymmetryState, onoro::Game<16u>::BoardSymmetryState)::{lambda(std::pair<int, int>)#1}) const [46]
                0.00    0.00    9597/9597        onoro::GameEq<16u>::compareViews<onoro::SymmetryClassOp<(onoro::SymmetryClass)1> >(onoro::GameView<16u> const&, onoro::GameView<16u> const&, onoro::Game<16u>::BoardSymmetryState, onoro::Game<16u>::BoardSymmetryState)::{lambda(std::pair<int, int>)#1}::operator()(std::pair<int, int>) const [44]
-----------------------------------------------
                0.00    0.00  573854/573854      absl::container_internal::raw_hash_set<absl::container_internal::FlatHashMapPolicy<onoro::GameView<16u>, int>, onoro::GameHash<16u>, onoro::GameEq<16u>, std::allocator<std::pair<onoro::GameView<16u> const, int> > >::const_iterator TranspositionTable::tryFindSymmetries<onoro::SymmetryClassOp<(onoro::SymmetryClass)0> >(onoro::GameView<16u>, onoro::Game<16u>::BoardSymmetryState) [35]
[53]     0.0    0.00    0.00  573854         void onoro::GameView<16u>::setOp<util::math::group::Dihedral<6u> >(util::math::group::Dihedral<6u>) [53]
-----------------------------------------------
                0.00    0.00    6908/6908        absl::container_internal::raw_hash_set<absl::container_internal::FlatHashMapPolicy<onoro::GameView<16u>, int>, onoro::GameHash<16u>, onoro::GameEq<16u>, std::allocator<std::pair<onoro::GameView<16u> const, int> > >::const_iterator TranspositionTable::tryFindSymmetries<onoro::SymmetryClassOp<(onoro::SymmetryClass)1> >(onoro::GameView<16u>, onoro::Game<16u>::BoardSymmetryState) [43]
[54]     0.0    0.00    0.00    6908         void onoro::GameView<16u>::setOp<util::math::group::Dihedral<3u> >(util::math::group::Dihedral<3u>) [54]
-----------------------------------------------
                0.00    0.00      23/23          absl::container_internal::raw_hash_set<absl::container_internal::FlatHashMapPolicy<onoro::GameView<16u>, int>, onoro::GameHash<16u>, onoro::GameEq<16u>, std::allocator<std::pair<onoro::GameView<16u> const, int> > >::prepare_insert(unsigned long) [26]
[55]     0.0    0.00    0.00      23         absl::container_internal::raw_hash_set<absl::container_internal::FlatHashMapPolicy<onoro::GameView<16u>, int>, onoro::GameHash<16u>, onoro::GameEq<16u>, std::allocator<std::pair<onoro::GameView<16u> const, int> > >::rehash_and_grow_if_necessary() [55]
-----------------------------------------------
                0.00    0.00       2/2           main [1]
[56]     0.0    0.00    0.00       2         onoro::Game<16u>::Print[abi:cxx11]() const [56]
-----------------------------------------------

 This table describes the call tree of the program, and was sorted by
 the total amount of time spent in each function and its children.

 Each entry in this table consists of several lines.  The line with the
 index number at the left hand margin lists the current function.
 The lines above it list the functions that called this function,
 and the lines below it list the functions this one called.
 This line lists:
     index	A unique number given to each element of the table.
		Index numbers are sorted numerically.
		The index number is printed next to every function name so
		it is easier to look up where the function is in the table.

     % time	This is the percentage of the `total' time that was spent
		in this function and its children.  Note that due to
		different viewpoints, functions excluded by options, etc,
		these numbers will NOT add up to 100%.

     self	This is the total amount of time spent in this function.

     children	This is the total amount of time propagated into this
		function by its children.

     called	This is the number of times the function was called.
		If the function called itself recursively, the number
		only includes non-recursive calls, and is followed by
		a `+' and the number of recursive calls.

     name	The name of the current function.  The index number is
		printed after it.  If the function is a member of a
		cycle, the cycle number is printed between the
		function's name and the index number.


 For the function's parents, the fields have the following meanings:

     self	This is the amount of time that was propagated directly
		from the function into this parent.

     children	This is the amount of time that was propagated from
		the function's children into this parent.

     called	This is the number of times this parent called the
		function `/' the total number of times the function
		was called.  Recursive calls to the function are not
		included in the number after the `/'.

     name	This is the name of the parent.  The parent's index
		number is printed after it.  If the parent is a
		member of a cycle, the cycle number is printed between
		the name and the index number.

 If the parents of the function cannot be determined, the word
 `<spontaneous>' is printed in the `name' field, and all the other
 fields are blank.

 For the function's children, the fields have the following meanings:

     self	This is the amount of time that was propagated directly
		from the child into the function.

     children	This is the amount of time that was propagated from the
		child's children to the function.

     called	This is the number of times the function called
		this child `/' the total number of times the child
		was called.  Recursive calls by the child are not
		listed in the number after the `/'.

     name	This is the name of the child.  The child's index
		number is printed after it.  If the child is a
		member of a cycle, the cycle number is printed
		between the name and the index number.

 If there are any cycles (circles) in the call graph, there is an
 entry for the cycle-as-a-whole.  This entry shows who called the
 cycle (as parents) and the members of the cycle (as children.)
 The `+' recursive calls entry shows the number of function calls that
 were internal to the cycle, and the calls entry for each member shows,
 for that member, how many times it was called from other members of
 the cycle.

Copyright (C) 2012-2022 Free Software Foundation, Inc.

Copying and distribution of this file, with or without modification,
are permitted in any medium without royalty provided the copyright
notice and this notice are preserved.

Index by function name

  [33] std::pair<int, onoro::P1Move> findMove<16u, onoro::P1Move>(onoro::Game<16u> const&, TranspositionTable&, int, int, int) [5] onoro::Game<16u>::Game(onoro::Game<16u> const&, onoro::P2Move) [29] bool onoro::Game<16u>::forEachPawn<onoro::GameEq<16u>::compareViews<onoro::SymmetryClassOp<(onoro::SymmetryClass)5> >(onoro::GameView<16u> const&, onoro::GameView<16u> const&, onoro::Game<16u>::BoardSymmetryState, onoro::Game<16u>::BoardSymmetryState)::{lambda(std::pair<int, int>)#1}>(onoro::GameEq<16u>::compareViews<onoro::SymmetryClassOp<(onoro::SymmetryClass)5> >(onoro::GameView<16u> const&, onoro::GameView<16u> const&, onoro::Game<16u>::BoardSymmetryState, onoro::Game<16u>::BoardSymmetryState)::{lambda(std::pair<int, int>)#1}) const
   [4] std::pair<int, onoro::P2Move> findMove<16u, onoro::P2Move>(onoro::Game<16u> const&, TranspositionTable&, int, int, int) [37] bool onoro::GameEq<16u>::compareViews<onoro::SymmetryClassOp<(onoro::SymmetryClass)0> >(onoro::GameView<16u> const&, onoro::GameView<16u> const&, onoro::Game<16u>::BoardSymmetryState, onoro::Game<16u>::BoardSymmetryState) [14] bool onoro::Game<16u>::forEachPawn<onoro::GameEq<16u>::compareViews<onoro::SymmetryClassOp<(onoro::SymmetryClass)6> >(onoro::GameView<16u> const&, onoro::GameView<16u> const&, onoro::Game<16u>::BoardSymmetryState, onoro::Game<16u>::BoardSymmetryState)::{lambda(std::pair<int, int>)#1}>(onoro::GameEq<16u>::compareViews<onoro::SymmetryClassOp<(onoro::SymmetryClass)6> >(onoro::GameView<16u> const&, onoro::GameView<16u> const&, onoro::Game<16u>::BoardSymmetryState, onoro::Game<16u>::BoardSymmetryState)::{lambda(std::pair<int, int>)#1}) const
  [35] absl::container_internal::raw_hash_set<absl::container_internal::FlatHashMapPolicy<onoro::GameView<16u>, int>, onoro::GameHash<16u>, onoro::GameEq<16u>, std::allocator<std::pair<onoro::GameView<16u> const, int> > >::const_iterator TranspositionTable::tryFindSymmetries<onoro::SymmetryClassOp<(onoro::SymmetryClass)0> >(onoro::GameView<16u>, onoro::Game<16u>::BoardSymmetryState) [45] bool onoro::GameEq<16u>::compareViews<onoro::SymmetryClassOp<(onoro::SymmetryClass)1> >(onoro::GameView<16u> const&, onoro::GameView<16u> const&, onoro::Game<16u>::BoardSymmetryState, onoro::Game<16u>::BoardSymmetryState) [13] bool onoro::Game<16u>::forEachPawn<onoro::GameHash<16u>::calcHash(onoro::Game<16u> const&)::{lambda(std::pair<int, int>)#1}>(onoro::GameHash<16u>::calcHash(onoro::Game<16u> const&)::{lambda(std::pair<int, int>)#1}) const
  [43] absl::container_internal::raw_hash_set<absl::container_internal::FlatHashMapPolicy<onoro::GameView<16u>, int>, onoro::GameHash<16u>, onoro::GameEq<16u>, std::allocator<std::pair<onoro::GameView<16u> const, int> > >::const_iterator TranspositionTable::tryFindSymmetries<onoro::SymmetryClassOp<(onoro::SymmetryClass)1> >(onoro::GameView<16u>, onoro::Game<16u>::BoardSymmetryState) [40] bool onoro::GameEq<16u>::compareViews<onoro::SymmetryClassOp<(onoro::SymmetryClass)2> >(onoro::GameView<16u> const&, onoro::GameView<16u> const&, onoro::Game<16u>::BoardSymmetryState, onoro::Game<16u>::BoardSymmetryState) [17] onoro::Game<16u>::calcSymmetryState() const
  [34] absl::container_internal::raw_hash_set<absl::container_internal::FlatHashMapPolicy<onoro::GameView<16u>, int>, onoro::GameHash<16u>, onoro::GameEq<16u>, std::allocator<std::pair<onoro::GameView<16u> const, int> > >::const_iterator TranspositionTable::tryFindSymmetries<onoro::SymmetryClassOp<(onoro::SymmetryClass)2> >(onoro::GameView<16u>, onoro::Game<16u>::BoardSymmetryState) [22] bool onoro::GameEq<16u>::compareViews<onoro::SymmetryClassOp<(onoro::SymmetryClass)3> >(onoro::GameView<16u> const&, onoro::GameView<16u> const&, onoro::Game<16u>::BoardSymmetryState, onoro::Game<16u>::BoardSymmetryState) [56] onoro::Game<16u>::Print[abi:cxx11]() const
  [21] absl::container_internal::raw_hash_set<absl::container_internal::FlatHashMapPolicy<onoro::GameView<16u>, int>, onoro::GameHash<16u>, onoro::GameEq<16u>, std::allocator<std::pair<onoro::GameView<16u> const, int> > >::const_iterator TranspositionTable::tryFindSymmetries<onoro::SymmetryClassOp<(onoro::SymmetryClass)3> >(onoro::GameView<16u>, onoro::Game<16u>::BoardSymmetryState) [20] bool onoro::GameEq<16u>::compareViews<onoro::SymmetryClassOp<(onoro::SymmetryClass)4> >(onoro::GameView<16u> const&, onoro::GameView<16u> const&, onoro::Game<16u>::BoardSymmetryState, onoro::Game<16u>::BoardSymmetryState) [6] onoro::Game<16u>::checkWin(std::pair<int, int>) const
  [19] absl::container_internal::raw_hash_set<absl::container_internal::FlatHashMapPolicy<onoro::GameView<16u>, int>, onoro::GameHash<16u>, onoro::GameEq<16u>, std::allocator<std::pair<onoro::GameView<16u> const, int> > >::const_iterator TranspositionTable::tryFindSymmetries<onoro::SymmetryClassOp<(onoro::SymmetryClass)4> >(onoro::GameView<16u>, onoro::Game<16u>::BoardSymmetryState) [28] bool onoro::GameEq<16u>::compareViews<onoro::SymmetryClassOp<(onoro::SymmetryClass)5> >(onoro::GameView<16u> const&, onoro::GameView<16u> const&, onoro::Game<16u>::BoardSymmetryState, onoro::Game<16u>::BoardSymmetryState) [7] onoro::GameEq<16u>::operator()(onoro::GameView<16u> const&, onoro::GameView<16u> const&) const
  [30] absl::container_internal::raw_hash_set<absl::container_internal::FlatHashMapPolicy<onoro::GameView<16u>, int>, onoro::GameHash<16u>, onoro::GameEq<16u>, std::allocator<std::pair<onoro::GameView<16u> const, int> > >::const_iterator TranspositionTable::tryFindSymmetries<onoro::SymmetryClassOp<(onoro::SymmetryClass)5> >(onoro::GameView<16u>, onoro::Game<16u>::BoardSymmetryState) [12] bool onoro::GameEq<16u>::compareViews<onoro::SymmetryClassOp<(onoro::SymmetryClass)6> >(onoro::GameView<16u> const&, onoro::GameView<16u> const&, onoro::Game<16u>::BoardSymmetryState, onoro::Game<16u>::BoardSymmetryState) [15] onoro::HexPos::apply_d6_c(util::math::group::Dihedral<6u>) const
  [10] absl::container_internal::raw_hash_set<absl::container_internal::FlatHashMapPolicy<onoro::GameView<16u>, int>, onoro::GameHash<16u>, onoro::GameEq<16u>, std::allocator<std::pair<onoro::GameView<16u> const, int> > >::const_iterator TranspositionTable::tryFindSymmetries<onoro::SymmetryClassOp<(onoro::SymmetryClass)6> >(onoro::GameView<16u>, onoro::Game<16u>::BoardSymmetryState) [9] onoro::GameHash<16u>::calcHash(onoro::Game<16u> const&) [42] onoro::GameEq<16u>::compareViews<onoro::SymmetryClassOp<(onoro::SymmetryClass)0> >(onoro::GameView<16u> const&, onoro::GameView<16u> const&, onoro::Game<16u>::BoardSymmetryState, onoro::Game<16u>::BoardSymmetryState)::{lambda(std::pair<int, int>)#1}::operator()(std::pair<int, int>) const
   [8] TranspositionTable::find(onoro::GameView<16u> const&) [54] void onoro::GameView<16u>::setOp<util::math::group::Dihedral<3u> >(util::math::group::Dihedral<3u>) [44] onoro::GameEq<16u>::compareViews<onoro::SymmetryClassOp<(onoro::SymmetryClass)1> >(onoro::GameView<16u> const&, onoro::GameView<16u> const&, onoro::Game<16u>::BoardSymmetryState, onoro::Game<16u>::BoardSymmetryState)::{lambda(std::pair<int, int>)#1}::operator()(std::pair<int, int>) const
  [36] TranspositionTable::insert(onoro::GameView<16u> const&, int) [53] void onoro::GameView<16u>::setOp<util::math::group::Dihedral<6u> >(util::math::group::Dihedral<6u>) [39] onoro::GameEq<16u>::compareViews<onoro::SymmetryClassOp<(onoro::SymmetryClass)2> >(onoro::GameView<16u> const&, onoro::GameView<16u> const&, onoro::Game<16u>::BoardSymmetryState, onoro::Game<16u>::BoardSymmetryState)::{lambda(std::pair<int, int>)#1}::operator()(std::pair<int, int>) const
  [11] std::pair<absl::container_internal::raw_hash_set<absl::container_internal::FlatHashMapPolicy<onoro::GameView<16u>, int>, onoro::GameHash<16u>, onoro::GameEq<16u>, std::allocator<std::pair<onoro::GameView<16u> const, int> > >::iterator, bool> absl::container_internal::raw_hash_map<absl::container_internal::FlatHashMapPolicy<onoro::GameView<16u>, int>, onoro::GameHash<16u>, onoro::GameEq<16u>, std::allocator<std::pair<onoro::GameView<16u> const, int> > >::insert_or_assign_impl<onoro::GameView<16u> const&, int const&>(onoro::GameView<16u> const&, int const&) [16] std::pair<absl::container_internal::raw_hash_set<absl::container_internal::FlatHashMapPolicy<onoro::GameView<16u>, int>, onoro::GameHash<16u>, onoro::GameEq<16u>, std::allocator<std::pair<onoro::GameView<16u> const, int> > >::iterator, bool> absl::container_internal::raw_hash_set<absl::container_internal::FlatHashMapPolicy<onoro::GameView<16u>, int>, onoro::GameHash<16u>, onoro::GameEq<16u>, std::allocator<std::pair<onoro::GameView<16u> const, int> > >::EmplaceDecomposable::operator()<onoro::GameView<16u>, std::piecewise_construct_t const&, std::tuple<onoro::GameView<16u>&&>, std::tuple<int&&> >(onoro::GameView<16u> const&, std::piecewise_construct_t const&, std::tuple<onoro::GameView<16u>&&>&&, std::tuple<int&&>&&) const [31] onoro::GameEq<16u>::compareViews<onoro::SymmetryClassOp<(onoro::SymmetryClass)5> >(onoro::GameView<16u> const&, onoro::GameView<16u> const&, onoro::Game<16u>::BoardSymmetryState, onoro::Game<16u>::BoardSymmetryState)::{lambda(std::pair<int, int>)#1}::operator()(std::pair<int, int>) const
  [26] absl::container_internal::raw_hash_set<absl::container_internal::FlatHashMapPolicy<onoro::GameView<16u>, int>, onoro::GameHash<16u>, onoro::GameEq<16u>, std::allocator<std::pair<onoro::GameView<16u> const, int> > >::prepare_insert(unsigned long) [38] bool onoro::Game<16u>::forEachPawn<onoro::GameEq<16u>::compareViews<onoro::SymmetryClassOp<(onoro::SymmetryClass)0> >(onoro::GameView<16u> const&, onoro::GameView<16u> const&, onoro::Game<16u>::BoardSymmetryState, onoro::Game<16u>::BoardSymmetryState)::{lambda(std::pair<int, int>)#1}>(onoro::GameEq<16u>::compareViews<onoro::SymmetryClassOp<(onoro::SymmetryClass)0> >(onoro::GameView<16u> const&, onoro::GameView<16u> const&, onoro::Game<16u>::BoardSymmetryState, onoro::Game<16u>::BoardSymmetryState)::{lambda(std::pair<int, int>)#1}) const [3] onoro::Game<16u>::forEachMove<findMove<16u, onoro::P1Move>(onoro::Game<16u> const&, TranspositionTable&, int, int, int)::{lambda(onoro::P1Move)#2}>(findMove<16u, onoro::P1Move>(onoro::Game<16u> const&, TranspositionTable&, int, int, int)::{lambda(onoro::P1Move)#2}) const::{lambda(std::pair<int, int>)#1}::operator()(std::pair<int, int>) const::{lambda(std::pair<int, int>)#1}::operator()(std::pair<int, int>) const
  [55] absl::container_internal::raw_hash_set<absl::container_internal::FlatHashMapPolicy<onoro::GameView<16u>, int>, onoro::GameHash<16u>, onoro::GameEq<16u>, std::allocator<std::pair<onoro::GameView<16u> const, int> > >::rehash_and_grow_if_necessary() [46] bool onoro::Game<16u>::forEachPawn<onoro::GameEq<16u>::compareViews<onoro::SymmetryClassOp<(onoro::SymmetryClass)1> >(onoro::GameView<16u> const&, onoro::GameView<16u> const&, onoro::Game<16u>::BoardSymmetryState, onoro::Game<16u>::BoardSymmetryState)::{lambda(std::pair<int, int>)#1}>(onoro::GameEq<16u>::compareViews<onoro::SymmetryClassOp<(onoro::SymmetryClass)1> >(onoro::GameView<16u> const&, onoro::GameView<16u> const&, onoro::Game<16u>::BoardSymmetryState, onoro::Game<16u>::BoardSymmetryState)::{lambda(std::pair<int, int>)#1}) const [24] _init
  [27] absl::container_internal::raw_hash_set<absl::container_internal::FlatHashMapPolicy<onoro::GameView<16u>, int>, onoro::GameHash<16u>, onoro::GameEq<16u>, std::allocator<std::pair<onoro::GameView<16u> const, int> > >::resize(unsigned long) [41] bool onoro::Game<16u>::forEachPawn<onoro::GameEq<16u>::compareViews<onoro::SymmetryClassOp<(onoro::SymmetryClass)2> >(onoro::GameView<16u> const&, onoro::GameView<16u> const&, onoro::Game<16u>::BoardSymmetryState, onoro::Game<16u>::BoardSymmetryState)::{lambda(std::pair<int, int>)#1}>(onoro::GameEq<16u>::compareViews<onoro::SymmetryClassOp<(onoro::SymmetryClass)2> >(onoro::GameView<16u> const&, onoro::GameView<16u> const&, onoro::Game<16u>::BoardSymmetryState, onoro::Game<16u>::BoardSymmetryState)::{lambda(std::pair<int, int>)#1}) const [2] <cycle 1>
  [18] onoro::Game<16u>::copyAndShift(unsigned long*, unsigned long const*, unsigned long, int) [25] bool onoro::Game<16u>::forEachPawn<onoro::GameEq<16u>::compareViews<onoro::SymmetryClassOp<(onoro::SymmetryClass)3> >(onoro::GameView<16u> const&, onoro::GameView<16u> const&, onoro::Game<16u>::BoardSymmetryState, onoro::Game<16u>::BoardSymmetryState)::{lambda(std::pair<int, int>)#1}>(onoro::GameEq<16u>::compareViews<onoro::SymmetryClassOp<(onoro::SymmetryClass)3> >(onoro::GameView<16u> const&, onoro::GameView<16u> const&, onoro::Game<16u>::BoardSymmetryState, onoro::Game<16u>::BoardSymmetryState)::{lambda(std::pair<int, int>)#1}) const
  [32] onoro::Game<16u>::Game(onoro::Game<16u> const&, onoro::P1Move) [23] bool onoro::Game<16u>::forEachPawn<onoro::GameEq<16u>::compareViews<onoro::SymmetryClassOp<(onoro::SymmetryClass)4> >(onoro::GameView<16u> const&, onoro::GameView<16u> const&, onoro::Game<16u>::BoardSymmetryState, onoro::Game<16u>::BoardSymmetryState)::{lambda(std::pair<int, int>)#1}>(onoro::GameEq<16u>::compareViews<onoro::SymmetryClassOp<(onoro::SymmetryClass)4> >(onoro::GameView<16u> const&, onoro::GameView<16u> const&, onoro::Game<16u>::BoardSymmetryState, onoro::Game<16u>::BoardSymmetryState)::{lambda(std::pair<int, int>)#1}) const
